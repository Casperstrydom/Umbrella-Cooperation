{
    "sourceFile": "frontend/hooks/useGetMessages.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 18,
            "patches": [
                {
                    "date": 1738653895708,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1738654299826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { useState, useEffect } from \"react\";\r\n import useConversation from '../src/zustand/useConversation';\r\n import toast from 'react-hot-toast';\r\n \r\n-const useGetMessages = () => { // Updated the name to match the export\r\n+const useGetMessages = () => {\r\n   const [loading, setLoading] = useState(false);\r\n   const { messages, setMessages, selectedConversation } = useConversation();\r\n \r\n   useEffect(() => {\r\n@@ -11,18 +11,23 @@\n       setLoading(true);\r\n       try {\r\n         const res = await fetch(`/api/messages/${selectedConversation._id}`);\r\n         const data = await res.json();\r\n-        setMessages(data.messages);\r\n+        if (data && data.messages) {\r\n+          setMessages(data.messages); // Update messages only if the response has messages\r\n+        }\r\n       } catch (error) {\r\n         toast.error(error.message);\r\n       } finally {\r\n         setLoading(false);\r\n       }\r\n     };\r\n-    if (selectedConversation._id) getMessages();\r\n-  }, [selectedConversation._id, setMessages]); \r\n-  \r\n-  return { messages, loading }; // Ensure this is returned so the values are usable in components\r\n+\r\n+    if (selectedConversation._id) {\r\n+      getMessages();\r\n+    }\r\n+  }, [selectedConversation._id, setMessages]);\r\n+\r\n+  return { messages, loading };\r\n };\r\n \r\n-export default useGetMessages; // Correct export\r\n+export default useGetMessages;\r\n"
                },
                {
                    "date": 1738654427441,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,10 +11,13 @@\n       setLoading(true);\r\n       try {\r\n         const res = await fetch(`/api/messages/${selectedConversation._id}`);\r\n         const data = await res.json();\r\n+\r\n         if (data && data.messages) {\r\n-          setMessages(data.messages); // Update messages only if the response has messages\r\n+          setMessages(data.messages); // Assuming the response contains a `messages` property\r\n+        } else {\r\n+          toast.error(\"No messages found\");\r\n         }\r\n       } catch (error) {\r\n         toast.error(error.message);\r\n       } finally {\r\n"
                },
                {
                    "date": 1738661114964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { useState, useEffect } from \"react\";\r\n import useConversation from '../src/zustand/useConversation';\r\n import toast from 'react-hot-toast';\r\n \r\n-const useGetMessages = () => {\r\n+const useGetConversations = () => {\r\n   const [loading, setLoading] = useState(false);\r\n   const { messages, setMessages, selectedConversation } = useConversation();\r\n \r\n   useEffect(() => {\r\n@@ -11,26 +11,19 @@\n       setLoading(true);\r\n       try {\r\n         const res = await fetch(`/api/messages/${selectedConversation._id}`);\r\n         const data = await res.json();\r\n-\r\n-        if (data && data.messages) {\r\n-          setMessages(data.messages); // Assuming the response contains a `messages` property\r\n-        } else {\r\n-          toast.error(\"No messages found\");\r\n-        }\r\n+        setMessages(data.messages);\r\n       } catch (error) {\r\n-        toast.error(error.message);\r\n+        toast.error(error.message)\r\n       } finally {\r\n         setLoading(false);\r\n       }\r\n     };\r\n+    if (selectedConversation._id) getMessages();\r\n+  }, [selectedConversation._id, setMessages]); \r\n+  \r\n \r\n-    if (selectedConversation._id) {\r\n-      getMessages();\r\n-    }\r\n-  }, [selectedConversation._id, setMessages]);\r\n-\r\n-  return { messages, loading };\r\n+  return { messages, loading }; \r\n };\r\n \r\n-export default useGetMessages;\r\n+export default useGetConversations;\r\n"
                },
                {
                    "date": 1738661125566,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { useState, useEffect } from \"react\";\r\n import useConversation from '../src/zustand/useConversation';\r\n import toast from 'react-hot-toast';\r\n \r\n-const useGetConversations = () => {\r\n+const useGetMessages = () => { // Updated the name to match the export\r\n   const [loading, setLoading] = useState(false);\r\n   const { messages, setMessages, selectedConversation } = useConversation();\r\n \r\n   useEffect(() => {\r\n@@ -13,17 +13,16 @@\n         const res = await fetch(`/api/messages/${selectedConversation._id}`);\r\n         const data = await res.json();\r\n         setMessages(data.messages);\r\n       } catch (error) {\r\n-        toast.error(error.message)\r\n+        toast.error(error.message);\r\n       } finally {\r\n         setLoading(false);\r\n       }\r\n     };\r\n     if (selectedConversation._id) getMessages();\r\n   }, [selectedConversation._id, setMessages]); \r\n   \r\n-\r\n-  return { messages, loading }; \r\n+  return { messages, loading }; // Ensure this is returned so the values are usable in components\r\n };\r\n \r\n-export default useGetConversations;\r\n+export default useGetMessages; // Correct export\r\n"
                },
                {
                    "date": 1738661884500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,19 @@\n import { useState, useEffect } from \"react\";\r\n-import useConversation from '../src/zustand/useConversation';\r\n-import toast from 'react-hot-toast';\r\n+import useConversation from \"../src/zustand/useConversation\";\r\n+import toast from \"react-hot-toast\";\r\n \r\n-const useGetMessages = () => { // Updated the name to match the export\r\n+const useGetMessages = () => {\r\n+  // Updated the name to match the export\r\n   const [loading, setLoading] = useState(false);\r\n   const { messages, setMessages, selectedConversation } = useConversation();\r\n \r\n   useEffect(() => {\r\n+    if (!selectedConversation._id) {\r\n+      toast.error(\"No conversation selected!\");\r\n+      return;\r\n+    }\r\n+\r\n     const getMessages = async () => {\r\n       setLoading(true);\r\n       try {\r\n         const res = await fetch(`/api/messages/${selectedConversation._id}`);\r\n@@ -18,11 +24,12 @@\n       } finally {\r\n         setLoading(false);\r\n       }\r\n     };\r\n-    if (selectedConversation._id) getMessages();\r\n-  }, [selectedConversation._id, setMessages]); \r\n-  \r\n+\r\n+    getMessages();\r\n+  }, [selectedConversation._id, setMessages]);\r\n+\r\n   return { messages, loading }; // Ensure this is returned so the values are usable in components\r\n };\r\n \r\n export default useGetMessages; // Correct export\r\n"
                },
                {
                    "date": 1738662186130,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,9 +2,8 @@\n import useConversation from \"../src/zustand/useConversation\";\r\n import toast from \"react-hot-toast\";\r\n \r\n const useGetMessages = () => {\r\n-  // Updated the name to match the export\r\n   const [loading, setLoading] = useState(false);\r\n   const { messages, setMessages, selectedConversation } = useConversation();\r\n \r\n   useEffect(() => {\r\n@@ -16,20 +15,26 @@\n     const getMessages = async () => {\r\n       setLoading(true);\r\n       try {\r\n         const res = await fetch(`/api/messages/${selectedConversation._id}`);\r\n+        \r\n+        if (!res.ok) {\r\n+          throw new Error(\"Failed to fetch messages\");\r\n+        }\r\n+\r\n         const data = await res.json();\r\n-        setMessages(data.messages);\r\n+        setMessages(data); // Assuming the response is an array of messages directly\r\n       } catch (error) {\r\n         toast.error(error.message);\r\n+        console.error(\"Error fetching messages:\", error);  // Log error for debugging\r\n       } finally {\r\n         setLoading(false);\r\n       }\r\n     };\r\n \r\n     getMessages();\r\n   }, [selectedConversation._id, setMessages]);\r\n \r\n-  return { messages, loading }; // Ensure this is returned so the values are usable in components\r\n+  return { messages, loading };\r\n };\r\n \r\n-export default useGetMessages; // Correct export\r\n+export default useGetMessages;\r\n"
                },
                {
                    "date": 1738823926311,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,40 +1,37 @@\n import { useState, useEffect } from \"react\";\r\n-import useConversation from \"../src/zustand/useConversation\";\r\n-import toast from \"react-hot-toast\";\r\n+import { toast } from \"react-toastify\";\r\n \r\n-const useGetMessages = () => {\r\n+const useGetConversations = () => {\r\n   const [loading, setLoading] = useState(false);\r\n-  const { messages, setMessages, selectedConversation } = useConversation();\r\n+  const [conversations, setConversations] = useState([]);\r\n \r\n   useEffect(() => {\r\n-    if (!selectedConversation._id) {\r\n-      toast.error(\"No conversation selected!\");\r\n-      return;\r\n-    }\r\n-\r\n-    const getMessages = async () => {\r\n+    const getConversations = async () => {\r\n       setLoading(true);\r\n       try {\r\n-        const res = await fetch(`/api/messages/${selectedConversation._id}`);\r\n-        \r\n-        if (!res.ok) {\r\n-          throw new Error(\"Failed to fetch messages\");\r\n+        const token = localStorage.getItem(\"chat-user\") ? JSON.parse(localStorage.getItem(\"chat-user\")).token : null;\r\n+        const res = await fetch(\"/api/users\", { // Ensure this URL is correct\r\n+          headers: {\r\n+            \"Authorization\": `Bearer ${token}`, // Include the token in the headers\r\n+          },\r\n+        });\r\n+        const data = await res.json();\r\n+        console.log(\"API Response:\", data);\r\n+        if (data.error) {\r\n+          throw new Error(data.error);\r\n         }\r\n-\r\n-        const data = await res.json();\r\n-        setMessages(data); // Assuming the response is an array of messages directly\r\n+        setConversations(data);\r\n       } catch (error) {\r\n         toast.error(error.message);\r\n-        console.error(\"Error fetching messages:\", error);  // Log error for debugging\r\n       } finally {\r\n         setLoading(false);\r\n       }\r\n     };\r\n \r\n-    getMessages();\r\n-  }, [selectedConversation._id, setMessages]);\r\n+    getConversations();\r\n+  }, []); // Added dependency array to prevent infinite re-renders\r\n \r\n-  return { messages, loading };\r\n+  return { conversations, loading };\r\n };\r\n \r\n-export default useGetMessages;\r\n+export default useGetConversations;\r\n"
                },
                {
                    "date": 1738823949656,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,37 +1,40 @@\n import { useState, useEffect } from \"react\";\r\n-import { toast } from \"react-toastify\";\r\n+import useConversation from \"../src/zustand/useConversation\";\r\n+import toast from \"react-hot-toast\";\r\n \r\n-const useGetConversations = () => {\r\n+const useGetMessages = () => {\r\n   const [loading, setLoading] = useState(false);\r\n-  const [conversations, setConversations] = useState([]);\r\n+  const { messages, setMessages, selectedConversation } = useConversation();\r\n \r\n   useEffect(() => {\r\n-    const getConversations = async () => {\r\n+    if (!selectedConversation._id) {\r\n+      toast.error(\"No conversation selected!\");\r\n+      return;\r\n+    }\r\n+\r\n+    const getMessages = async () => {\r\n       setLoading(true);\r\n       try {\r\n-        const token = localStorage.getItem(\"chat-user\") ? JSON.parse(localStorage.getItem(\"chat-user\")).token : null;\r\n-        const res = await fetch(\"/api/users\", { // Ensure this URL is correct\r\n-          headers: {\r\n-            \"Authorization\": `Bearer ${token}`, // Include the token in the headers\r\n-          },\r\n-        });\r\n+        const res = await fetch(`/api/messages/${selectedConversation._id}`);\r\n+        \r\n+        if (!res.ok) {\r\n+          throw new Error(\"Failed to fetch messages\");\r\n+        }\r\n+\r\n         const data = await res.json();\r\n-        console.log(\"API Response:\", data);\r\n-        if (data.error) {\r\n-          throw new Error(data.error);\r\n-        }\r\n-        setConversations(data);\r\n+        setMessages(data); // Assuming the response is an array of messages directly\r\n       } catch (error) {\r\n         toast.error(error.message);\r\n+        console.error(\"Error fetching messages:\", error);  // Log error for debugging\r\n       } finally {\r\n         setLoading(false);\r\n       }\r\n     };\r\n \r\n-    getConversations();\r\n-  }, []); // Added dependency array to prevent infinite re-renders\r\n+    getMessages();\r\n+  }, [selectedConversation._id, setMessages]);\r\n \r\n-  return { conversations, loading };\r\n+  return { messages, loading };\r\n };\r\n \r\n-export default useGetConversations;\r\n+export default useGetMessages;\r\n"
                },
                {
                    "date": 1738825085924,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,39 +1,48 @@\n import { useState, useEffect } from \"react\";\r\n-import useConversation from \"../src/zustand/useConversation\";\r\n+import useConversation from \"../zustand/useConversation\"; // Ensure correct import path\r\n import toast from \"react-hot-toast\";\r\n \r\n const useGetMessages = () => {\r\n   const [loading, setLoading] = useState(false);\r\n   const { messages, setMessages, selectedConversation } = useConversation();\r\n \r\n   useEffect(() => {\r\n-    if (!selectedConversation._id) {\r\n+    if (!selectedConversation?.id) { // Safe check\r\n       toast.error(\"No conversation selected!\");\r\n       return;\r\n     }\r\n \r\n     const getMessages = async () => {\r\n       setLoading(true);\r\n       try {\r\n-        const res = await fetch(`/api/messages/${selectedConversation._id}`);\r\n-        \r\n+        const token = localStorage.getItem(\"chat-user\") \r\n+          ? JSON.parse(localStorage.getItem(\"chat-user\")).token \r\n+          : null;\r\n+\r\n+        const res = await fetch(`/api/messages/${selectedConversation.id}`, {\r\n+          headers: {\r\n+            Authorization: `Bearer ${token}`,\r\n+            \"Content-Type\": \"application/json\",\r\n+          },\r\n+        });\r\n+\r\n         if (!res.ok) {\r\n           throw new Error(\"Failed to fetch messages\");\r\n         }\r\n \r\n         const data = await res.json();\r\n-        setMessages(data); // Assuming the response is an array of messages directly\r\n+        setMessages(data);\r\n       } catch (error) {\r\n         toast.error(error.message);\r\n-        console.error(\"Error fetching messages:\", error);  // Log error for debugging\r\n+        console.error(\"Error fetching messages:\", error);\r\n       } finally {\r\n         setLoading(false);\r\n       }\r\n     };\r\n \r\n     getMessages();\r\n-  }, [selectedConversation._id, setMessages]);\r\n+  }, [selectedConversation?.id, setMessages]);\r\n \r\n   return { messages, loading };\r\n };\r\n \r\n"
                },
                {
                    "date": 1738827687642,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import { useState, useEffect } from \"react\";\r\n-import useConversation from \"../zustand/useConversation\"; // Ensure correct import path\r\n+import useConversation from \"../src/zustand/useConversation\"; // Ensure correct import path\r\n import toast from \"react-hot-toast\";\r\n \r\n const useGetMessages = () => {\r\n   const [loading, setLoading] = useState(false);\r\n"
                },
                {
                    "date": 1738827728040,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import { useState, useEffect } from \"react\";\r\n-import useConversation from \"../src/zustand/useConversation\"; // Ensure correct import path\r\n+import useConversation from '../src/zustand/useConversation.js'; // Ensure correct import path\r\n import toast from \"react-hot-toast\";\r\n \r\n const useGetMessages = () => {\r\n   const [loading, setLoading] = useState(false);\r\n"
                },
                {
                    "date": 1738828287714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,10 @@\n   const [loading, setLoading] = useState(false);\r\n   const { messages, setMessages, selectedConversation } = useConversation();\r\n \r\n   useEffect(() => {\r\n-    if (!selectedConversation?.id) { // Safe check\r\n-      toast.error(\"No conversation selected!\");\r\n+    // If no conversation is selected, don't show an error, just return early\r\n+    if (!selectedConversation?.id) {\r\n       return;\r\n     }\r\n \r\n     const getMessages = async () => {\r\n"
                },
                {
                    "date": 1738829821185,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,48 +1,43 @@\n-import { useState, useEffect } from \"react\";\r\n-import useConversation from '../src/zustand/useConversation.js'; // Ensure correct import path\r\n-import toast from \"react-hot-toast\";\r\n+// src/hooks/useGetMessages.js\r\n+import { useState, useEffect } from 'react';\r\n+import useConversation from '../zustand/useConversation';  // Import your Zustand store\r\n \r\n const useGetMessages = () => {\r\n-  const [loading, setLoading] = useState(false);\r\n+  const [loading, setLoading] = useState(true);\r\n   const { messages, setMessages, selectedConversation } = useConversation();\r\n \r\n   useEffect(() => {\r\n-    // If no conversation is selected, don't show an error, just return early\r\n-    if (!selectedConversation?.id) {\r\n-      return;\r\n-    }\r\n+    const fetchMessages = async () => {\r\n+      if (!selectedConversation) return;\r\n \r\n-    const getMessages = async () => {\r\n-      setLoading(true);\r\n       try {\r\n-        const token = localStorage.getItem(\"chat-user\") \r\n-          ? JSON.parse(localStorage.getItem(\"chat-user\")).token \r\n+        const token = localStorage.getItem('chat-user')\r\n+          ? JSON.parse(localStorage.getItem('chat-user')).token\r\n           : null;\r\n \r\n-        const res = await fetch(`/api/messages/${selectedConversation.id}`, {\r\n+        const res = await fetch(`/api/messages/${selectedConversation._id}`, {\r\n           headers: {\r\n-            Authorization: `Bearer ${token}`,\r\n-            \"Content-Type\": \"application/json\",\r\n+            'Authorization': `Bearer ${token}`, // Include token in header\r\n           },\r\n         });\r\n \r\n-        if (!res.ok) {\r\n-          throw new Error(\"Failed to fetch messages\");\r\n+        const data = await res.json();\r\n+\r\n+        if (data.error) {\r\n+          throw new Error(data.error);\r\n         }\r\n \r\n-        const data = await res.json();\r\n-        setMessages(data);\r\n+        setMessages(data);  // Set messages in Zustand store\r\n+        setLoading(false);\r\n       } catch (error) {\r\n-        toast.error(error.message);\r\n-        console.error(\"Error fetching messages:\", error);\r\n-      } finally {\r\n         setLoading(false);\r\n+        console.error('Error fetching messages:', error);\r\n       }\r\n     };\r\n \r\n-    getMessages();\r\n-  }, [selectedConversation?.id, setMessages]);\r\n+    fetchMessages();\r\n+  }, [selectedConversation, setMessages]);  // Fetch messages whenever the selected conversation changes\r\n \r\n   return { messages, loading };\r\n };\r\n \r\n"
                },
                {
                    "date": 1738830526134,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n // src/hooks/useGetMessages.js\r\n import { useState, useEffect } from 'react';\r\n-import useConversation from '../zustand/useConversation';  // Import your Zustand store\r\n+import useConversation from '../src/zustand/useConversation';  // Import your Zustand store\r\n \r\n const useGetMessages = () => {\r\n   const [loading, setLoading] = useState(true);\r\n   const { messages, setMessages, selectedConversation } = useConversation();\r\n"
                },
                {
                    "date": 1738831464601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,4 @@\n-// src/hooks/useGetMessages.js\r\n import { useState, useEffect } from 'react';\r\n import useConversation from '../src/zustand/useConversation';  // Import your Zustand store\r\n \r\n const useGetMessages = () => {\r\n@@ -26,9 +25,10 @@\n         if (data.error) {\r\n           throw new Error(data.error);\r\n         }\r\n \r\n-        setMessages(data);  // Set messages in Zustand store\r\n+        // Ensure messages is an array\r\n+        setMessages(Array.isArray(data) ? data : []);  // Set messages in Zustand store\r\n         setLoading(false);\r\n       } catch (error) {\r\n         setLoading(false);\r\n         console.error('Error fetching messages:', error);\r\n@@ -40,5 +40,5 @@\n \r\n   return { messages, loading };\r\n };\r\n \r\n-export default useGetMessages;\r\n+export default useGetMessages;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738838204997,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,44 +1,29 @@\n-import { useState, useEffect } from 'react';\r\n-import useConversation from '../src/zustand/useConversation';  // Import your Zustand store\r\n+import { useEffect, useState } from \"react\";\r\n+import useConversation from \"../zustand/useConversation\";\r\n+import toast from \"react-hot-toast\";\r\n \r\n const useGetMessages = () => {\r\n-  const [loading, setLoading] = useState(true);\r\n-  const { messages, setMessages, selectedConversation } = useConversation();\r\n+\tconst [loading, setLoading] = useState(false);\r\n+\tconst { messages, setMessages, selectedConversation } = useConversation();\r\n \r\n-  useEffect(() => {\r\n-    const fetchMessages = async () => {\r\n-      if (!selectedConversation) return;\r\n+\tuseEffect(() => {\r\n+\t\tconst getMessages = async () => {\r\n+\t\t\tsetLoading(true);\r\n+\t\t\ttry {\r\n+\t\t\t\tconst res = await fetch(`/api/messages/${selectedConversation._id}`);\r\n+\t\t\t\tconst data = await res.json();\r\n+\t\t\t\tif (data.error) throw new Error(data.error);\r\n+\t\t\t\tsetMessages(data);\r\n+\t\t\t} catch (error) {\r\n+\t\t\t\ttoast.error(error.message);\r\n+\t\t\t} finally {\r\n+\t\t\t\tsetLoading(false);\r\n+\t\t\t}\r\n+\t\t};\r\n \r\n-      try {\r\n-        const token = localStorage.getItem('chat-user')\r\n-          ? JSON.parse(localStorage.getItem('chat-user')).token\r\n-          : null;\r\n+\t\tif (selectedConversation?._id) getMessages();\r\n+\t}, [selectedConversation?._id, setMessages]);\r\n \r\n-        const res = await fetch(`/api/messages/${selectedConversation._id}`, {\r\n-          headers: {\r\n-            'Authorization': `Bearer ${token}`, // Include token in header\r\n-          },\r\n-        });\r\n-\r\n-        const data = await res.json();\r\n-\r\n-        if (data.error) {\r\n-          throw new Error(data.error);\r\n-        }\r\n-\r\n-        // Ensure messages is an array\r\n-        setMessages(Array.isArray(data) ? data : []);  // Set messages in Zustand store\r\n-        setLoading(false);\r\n-      } catch (error) {\r\n-        setLoading(false);\r\n-        console.error('Error fetching messages:', error);\r\n-      }\r\n-    };\r\n-\r\n-    fetchMessages();\r\n-  }, [selectedConversation, setMessages]);  // Fetch messages whenever the selected conversation changes\r\n-\r\n-  return { messages, loading };\r\n+\treturn { messages, loading };\r\n };\r\n-\r\n export default useGetMessages;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738839132563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,28 +2,28 @@\n import useConversation from \"../zustand/useConversation\";\r\n import toast from \"react-hot-toast\";\r\n \r\n const useGetMessages = () => {\r\n-\tconst [loading, setLoading] = useState(false);\r\n-\tconst { messages, setMessages, selectedConversation } = useConversation();\r\n+    const [loading, setLoading] = useState(false);\r\n+    const { messages, setMessages, selectedConversation } = useConversation();\r\n \r\n-\tuseEffect(() => {\r\n-\t\tconst getMessages = async () => {\r\n-\t\t\tsetLoading(true);\r\n-\t\t\ttry {\r\n-\t\t\t\tconst res = await fetch(`/api/messages/${selectedConversation._id}`);\r\n-\t\t\t\tconst data = await res.json();\r\n-\t\t\t\tif (data.error) throw new Error(data.error);\r\n-\t\t\t\tsetMessages(data);\r\n-\t\t\t} catch (error) {\r\n-\t\t\t\ttoast.error(error.message);\r\n-\t\t\t} finally {\r\n-\t\t\t\tsetLoading(false);\r\n-\t\t\t}\r\n-\t\t};\r\n+    useEffect(() => {\r\n+        const getMessages = async () => {\r\n+            setLoading(true);\r\n+            try {\r\n+                const res = await fetch(`/api/messages/${selectedConversation._id}`);\r\n+                const data = await res.json();\r\n+                if (data.error) throw new Error(data.error);\r\n+                setMessages(data);\r\n+            } catch (error) {\r\n+                toast.error(error.message);\r\n+            } finally {\r\n+                setLoading(false);\r\n+            }\r\n+        };\r\n \r\n-\t\tif (selectedConversation?._id) getMessages();\r\n-\t}, [selectedConversation?._id, setMessages]);\r\n+        if (selectedConversation?._id) getMessages();\r\n+    }, [selectedConversation?._id, setMessages]);\r\n \r\n-\treturn { messages, loading };\r\n+    return { messages, loading };\r\n };\r\n export default useGetMessages;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738839805893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import { useEffect, useState } from \"react\";\r\n-import useConversation from \"../zustand/useConversation\";\r\n+import useConversation from \"../src/zustand/useConversation\"; // Adjust path accordingly\r\n import toast from \"react-hot-toast\";\r\n \r\n const useGetMessages = () => {\r\n     const [loading, setLoading] = useState(false);\r\n"
                }
            ],
            "date": 1738653895708,
            "name": "Commit-0",
            "content": "import { useState, useEffect } from \"react\";\r\nimport useConversation from '../src/zustand/useConversation';\r\nimport toast from 'react-hot-toast';\r\n\r\nconst useGetMessages = () => { // Updated the name to match the export\r\n  const [loading, setLoading] = useState(false);\r\n  const { messages, setMessages, selectedConversation } = useConversation();\r\n\r\n  useEffect(() => {\r\n    const getMessages = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const res = await fetch(`/api/messages/${selectedConversation._id}`);\r\n        const data = await res.json();\r\n        setMessages(data.messages);\r\n      } catch (error) {\r\n        toast.error(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    if (selectedConversation._id) getMessages();\r\n  }, [selectedConversation._id, setMessages]); \r\n  \r\n  return { messages, loading }; // Ensure this is returned so the values are usable in components\r\n};\r\n\r\nexport default useGetMessages; // Correct export\r\n"
        }
    ]
}