{
    "sourceFile": "frontend/hooks/useSignup.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 24,
            "patches": [
                {
                    "date": 1738276627259,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1738277561400,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import { useState } from \"react\";\r\n import { toast } from \"react-hot-toast\";\r\n \r\n const useSignup = () => {\r\n-  const [loading, setloading] = useState(false);\r\n+  const [loading, setLoading] = useState(false);\r\n \r\n   const signup = async ({\r\n     fullName,\r\n     username,\r\n@@ -17,12 +17,34 @@\n       password,\r\n       confirmPassword,\r\n       gender,\r\n     });\r\n-    if (!success) {\r\n-      return false;\r\n+    if (!success) return false;\r\n+\r\n+    setLoading(true);\r\n+\r\n+    try {\r\n+      const res = await fetch(\"http://localhost:5000/api/auth/signup\", {\r\n+        method: \"POST\",\r\n+        headers: {\r\n+          \"Content-Type\": \"application/json\",\r\n+        },\r\n+        body: JSON.stringify({ fullName, username, password, gender }),\r\n+      });\r\n+\r\n+      if (!res.ok) {\r\n+        throw new Error(\"Signup failed\");\r\n+      }\r\n+\r\n+      toast.success(\"Signup successful!\");\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+    } finally {\r\n+      setLoading(false);\r\n     }\r\n   };\r\n+\r\n+  return { signup, loading };\r\n };\r\n \r\n export default useSignup;\r\n \r\n@@ -36,5 +58,16 @@\n   if (!fullName || !username || !password || !confirmPassword || !gender) {\r\n     toast.error(\"All fields are required\");\r\n     return false;\r\n   }\r\n+\r\n+  if (password !== confirmPassword) {\r\n+    toast.error(\"Passwords do not match\");\r\n+    return false;\r\n+  }\r\n+\r\n+  if (password.length < 6) {\r\n+    toast.error(\"Password must be at least 6 characters long\");\r\n+    return false;\r\n+  }\r\n+  return true;\r\n }\r\n"
                },
                {
                    "date": 1738278099042,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,15 +30,19 @@\n         },\r\n         body: JSON.stringify({ fullName, username, password, gender }),\r\n       });\r\n \r\n+      const data = await res.json();\r\n+\r\n       if (!res.ok) {\r\n-        throw new Error(\"Signup failed\");\r\n+        throw new Error(data?.message || \"Signup failed\");\r\n       }\r\n \r\n       toast.success(\"Signup successful!\");\r\n+      return data;\r\n     } catch (error) {\r\n       toast.error(error.message);\r\n+      return null;\r\n     } finally {\r\n       setLoading(false);\r\n     }\r\n   };\r\n"
                },
                {
                    "date": 1738279947108,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n \r\n     setLoading(true);\r\n \r\n     try {\r\n-      const res = await fetch(\"http://localhost:5000/api/auth/signup\", {\r\n+      const res = await fetch(\"/api/auth/signup\", {\r\n         method: \"POST\",\r\n         headers: {\r\n           \"Content-Type\": \"application/json\",\r\n         },\r\n"
                },
                {
                    "date": 1738282571776,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,9 +22,9 @@\n \r\n     setLoading(true);\r\n \r\n     try {\r\n-      const res = await fetch(\"/api/auth/signup\", {\r\n+      const res = await fetch(\"http://localhost:3000/api/auth/signup\", {\r\n         method: \"POST\",\r\n         headers: {\r\n           \"Content-Type\": \"application/json\",\r\n         },\r\n"
                },
                {
                    "date": 1738282750499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -22,14 +22,14 @@\n \r\n     setLoading(true);\r\n \r\n     try {\r\n-      const res = await fetch(\"http://localhost:3000/api/auth/signup\", {\r\n+      const res = await fetch(\"/api/auth/signup\", {\r\n         method: \"POST\",\r\n         headers: {\r\n           \"Content-Type\": \"application/json\",\r\n         },\r\n-        body: JSON.stringify({ fullName, username, password, gender }),\r\n+        body: JSON.stringify({ fullName, username, password, confirmPassword, gender }),\r\n       });\r\n \r\n       const data = await res.json();\r\n \r\n"
                },
                {
                    "date": 1738283354769,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,18 +37,21 @@\n         throw new Error(data?.message || \"Signup failed\");\r\n       }\r\n \r\n       toast.success(\"Signup successful!\");\r\n+      console.log(\"Signup successful, data received:\", data); // <-- Add this log\r\n       return data;\r\n     } catch (error) {\r\n       toast.error(error.message);\r\n+      console.error(\"Signup error:\", error); // <-- Add this log\r\n       return null;\r\n     } finally {\r\n       setLoading(false);\r\n     }\r\n   };\r\n \r\n-  return { signup, loading };\r\n+  return { signup, loading }; // Return after the signup function\r\n+\r\n };\r\n \r\n export default useSignup;\r\n \r\n"
                },
                {
                    "date": 1738303778941,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,15 +27,20 @@\n         method: \"POST\",\r\n         headers: {\r\n           \"Content-Type\": \"application/json\",\r\n         },\r\n-        body: JSON.stringify({ fullName, username, password, confirmPassword, gender }),\r\n+        body: JSON.stringify({\r\n+          fullName,\r\n+          username,\r\n+          password,\r\n+          confirmPassword,\r\n+          gender,\r\n+        }),\r\n       });\r\n \r\n       const data = await res.json();\r\n-\r\n-      if (!res.ok) {\r\n-        throw new Error(data?.message || \"Signup failed\");\r\n+      if (data.error) {\r\n+        throw new Error(data.error);\r\n       }\r\n \r\n       toast.success(\"Signup successful!\");\r\n       console.log(\"Signup successful, data received:\", data); // <-- Add this log\r\n@@ -49,9 +54,8 @@\n     }\r\n   };\r\n \r\n   return { signup, loading }; // Return after the signup function\r\n-\r\n };\r\n \r\n export default useSignup;\r\n \r\n"
                },
                {
                    "date": 1738303851334,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,8 +40,10 @@\n       const data = await res.json();\r\n       if (data.error) {\r\n         throw new Error(data.error);\r\n       }\r\n+      // localstorage\r\n+      // context\r\n \r\n       toast.success(\"Signup successful!\");\r\n       console.log(\"Signup successful, data received:\", data); // <-- Add this log\r\n       return data;\r\n"
                },
                {
                    "date": 1738306273037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,11 @@\n import { useState } from \"react\";\r\n import { toast } from \"react-hot-toast\";\r\n+import { useAuthContext } from \"../src/context/AuthContext\";\r\n \r\n const useSignup = () => {\r\n   const [loading, setLoading] = useState(false);\r\n+  const { setAuthUser } = useAuthContext()\r\n \r\n   const signup = async ({\r\n     fullName,\r\n     username,\r\n@@ -40,10 +42,12 @@\n       const data = await res.json();\r\n       if (data.error) {\r\n         throw new Error(data.error);\r\n       }\r\n-      // localstorage\r\n-      // context\r\n+      \r\n+      localStorage.setItem('chat-user',JSON.stringify(data));\r\n+      \r\n+      setAuthUser(data)\r\n \r\n       toast.success(\"Signup successful!\");\r\n       console.log(\"Signup successful, data received:\", data); // <-- Add this log\r\n       return data;\r\n"
                },
                {
                    "date": 1738358722920,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,9 +19,9 @@\n       password,\r\n       confirmPassword,\r\n       gender,\r\n     });\r\n-    if (!success) return false;\r\n+    if (!success) return;\r\n \r\n     setLoading(true);\r\n \r\n     try {\r\n"
                },
                {
                    "date": 1738745422978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { useAuthContext } from \"../src/context/AuthContext\";\r\n \r\n const useSignup = () => {\r\n   const [loading, setLoading] = useState(false);\r\n-  const { setAuthUser } = useAuthContext()\r\n+  const { setAuthUser } = useAuthContext();\r\n \r\n   const signup = async ({\r\n     fullName,\r\n     username,\r\n@@ -19,10 +19,11 @@\n       password,\r\n       confirmPassword,\r\n       gender,\r\n     });\r\n-    if (!success) return;\r\n \r\n+    if (!success) return { error: \"Validation failed\" };\r\n+\r\n     setLoading(true);\r\n \r\n     try {\r\n       const res = await fetch(\"/api/auth/signup\", {\r\n@@ -39,40 +40,35 @@\n         }),\r\n       });\r\n \r\n       const data = await res.json();\r\n-      if (data.error) {\r\n-        throw new Error(data.error);\r\n+\r\n+      if (!res.ok) {\r\n+        throw new Error(data.error || \"Signup failed! Please try again.\");\r\n       }\r\n+\r\n+      localStorage.setItem(\"chat-user\", JSON.stringify(data));\r\n+      setAuthUser(data);\r\n       \r\n-      localStorage.setItem('chat-user',JSON.stringify(data));\r\n-      \r\n-      setAuthUser(data)\r\n-\r\n       toast.success(\"Signup successful!\");\r\n-      console.log(\"Signup successful, data received:\", data); // <-- Add this log\r\n-      return data;\r\n+      return { success: true, data };\r\n     } catch (error) {\r\n       toast.error(error.message);\r\n-      console.error(\"Signup error:\", error); // <-- Add this log\r\n-      return null;\r\n+      console.error(\"Signup error:\", error.message);\r\n+      return { error: error.message };\r\n     } finally {\r\n       setLoading(false);\r\n     }\r\n   };\r\n \r\n-  return { signup, loading }; // Return after the signup function\r\n+  return { signup, loading };\r\n };\r\n \r\n+// ✅ Only ONE default export (fixes the error)\r\n export default useSignup;\r\n \r\n-function handleInputErrors({\r\n-  fullName,\r\n-  username,\r\n-  password,\r\n-  confirmPassword,\r\n-  gender,\r\n-}) {\r\n+// ✅ Use named export for `handleInputErrors`\r\n+export function handleInputErrors({ fullName, username, password, confirmPassword, gender }) {\r\n   if (!fullName || !username || !password || !confirmPassword || !gender) {\r\n     toast.error(\"All fields are required\");\r\n     return false;\r\n   }\r\n@@ -85,6 +81,8 @@\n   if (password.length < 6) {\r\n     toast.error(\"Password must be at least 6 characters long\");\r\n     return false;\r\n   }\r\n+\r\n   return true;\r\n }\r\n+\r\n"
                },
                {
                    "date": 1738745986665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,9 +3,9 @@\n import { useAuthContext } from \"../src/context/AuthContext\";\r\n \r\n const useSignup = () => {\r\n   const [loading, setLoading] = useState(false);\r\n-  const { setAuthUser } = useAuthContext();\r\n+  const { setAuthUser } = useAuthContext()\r\n \r\n   const signup = async ({\r\n     fullName,\r\n     username,\r\n@@ -19,11 +19,10 @@\n       password,\r\n       confirmPassword,\r\n       gender,\r\n     });\r\n+    if (!success) return;\r\n \r\n-    if (!success) return { error: \"Validation failed\" };\r\n-\r\n     setLoading(true);\r\n \r\n     try {\r\n       const res = await fetch(\"/api/auth/signup\", {\r\n@@ -40,35 +39,40 @@\n         }),\r\n       });\r\n \r\n       const data = await res.json();\r\n-\r\n-      if (!res.ok) {\r\n-        throw new Error(data.error || \"Signup failed! Please try again.\");\r\n+      if (data.error) {\r\n+        throw new Error(data.error);\r\n       }\r\n+      \r\n+      localStorage.setItem('chat-user',JSON.stringify(data));\r\n+      \r\n+      setAuthUser(data)\r\n \r\n-      localStorage.setItem(\"chat-user\", JSON.stringify(data));\r\n-      setAuthUser(data);\r\n-      \r\n       toast.success(\"Signup successful!\");\r\n-      return { success: true, data };\r\n+      console.log(\"Signup successful, data received:\", data); // <-- Add this log\r\n+      return data;\r\n     } catch (error) {\r\n       toast.error(error.message);\r\n-      console.error(\"Signup error:\", error.message);\r\n-      return { error: error.message };\r\n+      console.error(\"Signup error:\", error); // <-- Add this log\r\n+      return null;\r\n     } finally {\r\n       setLoading(false);\r\n     }\r\n   };\r\n \r\n-  return { signup, loading };\r\n+  return { signup, loading }; // Return after the signup function\r\n };\r\n \r\n-// ✅ Only ONE default export (fixes the error)\r\n export default useSignup;\r\n \r\n-// ✅ Use named export for `handleInputErrors`\r\n-export function handleInputErrors({ fullName, username, password, confirmPassword, gender }) {\r\n+function handleInputErrors({\r\n+  fullName,\r\n+  username,\r\n+  password,\r\n+  confirmPassword,\r\n+  gender,\r\n+}) {\r\n   if (!fullName || !username || !password || !confirmPassword || !gender) {\r\n     toast.error(\"All fields are required\");\r\n     return false;\r\n   }\r\n@@ -81,8 +85,6 @@\n   if (password.length < 6) {\r\n     toast.error(\"Password must be at least 6 characters long\");\r\n     return false;\r\n   }\r\n-\r\n   return true;\r\n }\r\n-\r\n"
                },
                {
                    "date": 1738746653423,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,88 @@\n+import { useState } from \"react\";\r\n+import { toast } from \"react-hot-toast\";\r\n+import { useAuthContext } from \"../src/context/AuthContext\";\r\n+\r\n+const useSignup = () => {\r\n+  const [loading, setLoading] = useState(false);\r\n+  const { setAuthUser } = useAuthContext();\r\n+\r\n+  const signup = async ({\r\n+    fullName,\r\n+    username,\r\n+    password,\r\n+    confirmPassword,\r\n+    gender,\r\n+  }) => {\r\n+    const success = handleInputErrors({\r\n+      fullName,\r\n+      username,\r\n+      password,\r\n+      confirmPassword,\r\n+      gender,\r\n+    });\r\n+    if (!success) return;\r\n+\r\n+    setLoading(true);\r\n+\r\n+    try {\r\n+      const res = await fetch(\"/api/auth/signup\", {\r\n+        method: \"POST\",\r\n+        headers: {\r\n+          \"Content-Type\": \"application/json\",\r\n+        },\r\n+        body: JSON.stringify({\r\n+          fullName,\r\n+          username,\r\n+          password,\r\n+          confirmPassword,\r\n+          gender,\r\n+        }),\r\n+      });\r\n+\r\n+      const data = await res.json();\r\n+      if (data.error) {\r\n+        throw new Error(data.error);\r\n+      }\r\n+      \r\n+      localStorage.setItem('chat-user', JSON.stringify(data));\r\n+      setAuthUser(data);\r\n+      toast.success(\"Signup successful!\");\r\n+      console.log(\"Signup successful, data received:\", data);\r\n+      return data;\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+      console.error(\"Signup error:\", error);\r\n+      return null;\r\n+    } finally {\r\n+      setLoading(false);\r\n+    }\r\n+  };\r\n+\r\n+  return { signup, loading };\r\n+};\r\n+\r\n+export default useSignup;\r\n+\r\n+function handleInputErrors({\r\n+  fullName,\r\n+  username,\r\n+  password,\r\n+  confirmPassword,\r\n+  gender,\r\n+}) {\r\n+  if (!fullName || !username || !password || !confirmPassword || !gender) {\r\n+    toast.error(\"All fields are required\");\r\n+    return false;\r\n+  }\r\n+\r\n+  if (password !== confirmPassword) {\r\n+    toast.error(\"Passwords do not match\");\r\n+    return false;\r\n+  }\r\n+\r\n+  if (password.length < 6) {\r\n+    toast.error(\"Password must be at least 6 characters long\");\r\n+    return false;\r\n+  }\r\n+  return true;\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738748191443,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,13 @@\n import { useState } from \"react\";\r\n import { toast } from \"react-hot-toast\";\r\n import { useAuthContext } from \"../src/context/AuthContext\";\r\n+import { useNavigate } from \"react-router-dom\"; // Import useNavigate\r\n \r\n const useSignup = () => {\r\n   const [loading, setLoading] = useState(false);\r\n   const { setAuthUser } = useAuthContext();\r\n+  const navigate = useNavigate(); // Initialize useNavigate\r\n \r\n   const signup = async ({\r\n     fullName,\r\n     username,\r\n@@ -39,8 +41,14 @@\n         }),\r\n       });\r\n \r\n       const data = await res.json();\r\n+      if (data.message === \"Username already taken. Please log in.\") {\r\n+        toast.error(data.message);\r\n+        navigate(\"/login\"); // Redirect to login page\r\n+        return;\r\n+      }\r\n+\r\n       if (data.error) {\r\n         throw new Error(data.error);\r\n       }\r\n       \r\n@@ -84,95 +92,5 @@\n     toast.error(\"Password must be at least 6 characters long\");\r\n     return false;\r\n   }\r\n   return true;\r\n-}\n-import { useState } from \"react\";\r\n-import { toast } from \"react-hot-toast\";\r\n-import { useAuthContext } from \"../src/context/AuthContext\";\r\n-\r\n-const useSignup = () => {\r\n-  const [loading, setLoading] = useState(false);\r\n-  const { setAuthUser } = useAuthContext()\r\n-\r\n-  const signup = async ({\r\n-    fullName,\r\n-    username,\r\n-    password,\r\n-    confirmPassword,\r\n-    gender,\r\n-  }) => {\r\n-    const success = handleInputErrors({\r\n-      fullName,\r\n-      username,\r\n-      password,\r\n-      confirmPassword,\r\n-      gender,\r\n-    });\r\n-    if (!success) return;\r\n-\r\n-    setLoading(true);\r\n-\r\n-    try {\r\n-      const res = await fetch(\"/api/auth/signup\", {\r\n-        method: \"POST\",\r\n-        headers: {\r\n-          \"Content-Type\": \"application/json\",\r\n-        },\r\n-        body: JSON.stringify({\r\n-          fullName,\r\n-          username,\r\n-          password,\r\n-          confirmPassword,\r\n-          gender,\r\n-        }),\r\n-      });\r\n-\r\n-      const data = await res.json();\r\n-      if (data.error) {\r\n-        throw new Error(data.error);\r\n-      }\r\n-      \r\n-      localStorage.setItem('chat-user',JSON.stringify(data));\r\n-      \r\n-      setAuthUser(data)\r\n-\r\n-      toast.success(\"Signup successful!\");\r\n-      console.log(\"Signup successful, data received:\", data); // <-- Add this log\r\n-      return data;\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-      console.error(\"Signup error:\", error); // <-- Add this log\r\n-      return null;\r\n-    } finally {\r\n-      setLoading(false);\r\n-    }\r\n-  };\r\n-\r\n-  return { signup, loading }; // Return after the signup function\r\n-};\r\n-\r\n-export default useSignup;\r\n-\r\n-function handleInputErrors({\r\n-  fullName,\r\n-  username,\r\n-  password,\r\n-  confirmPassword,\r\n-  gender,\r\n-}) {\r\n-  if (!fullName || !username || !password || !confirmPassword || !gender) {\r\n-    toast.error(\"All fields are required\");\r\n-    return false;\r\n-  }\r\n-\r\n-  if (password !== confirmPassword) {\r\n-    toast.error(\"Passwords do not match\");\r\n-    return false;\r\n-  }\r\n-\r\n-  if (password.length < 6) {\r\n-    toast.error(\"Password must be at least 6 characters long\");\r\n-    return false;\r\n-  }\r\n-  return true;\r\n }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738749508523,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,11 @@\n import { useState } from \"react\";\r\n import { toast } from \"react-hot-toast\";\r\n import { useAuthContext } from \"../src/context/AuthContext\";\r\n-import { useNavigate } from \"react-router-dom\"; // Import useNavigate\r\n \r\n const useSignup = () => {\r\n   const [loading, setLoading] = useState(false);\r\n   const { setAuthUser } = useAuthContext();\r\n-  const navigate = useNavigate(); // Initialize useNavigate\r\n \r\n   const signup = async ({\r\n     fullName,\r\n     username,\r\n@@ -41,14 +39,8 @@\n         }),\r\n       });\r\n \r\n       const data = await res.json();\r\n-      if (data.message === \"Username already taken. Please log in.\") {\r\n-        toast.error(data.message);\r\n-        navigate(\"/login\"); // Redirect to login page\r\n-        return;\r\n-      }\r\n-\r\n       if (data.error) {\r\n         throw new Error(data.error);\r\n       }\r\n       \r\n"
                },
                {
                    "date": 1738769437126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,15 +7,17 @@\n   const { setAuthUser } = useAuthContext();\r\n \r\n   const signup = async ({\r\n     fullName,\r\n+    gmail,\r\n     username,\r\n     password,\r\n     confirmPassword,\r\n     gender,\r\n   }) => {\r\n     const success = handleInputErrors({\r\n       fullName,\r\n+      gmail,\r\n       username,\r\n       password,\r\n       confirmPassword,\r\n       gender,\r\n@@ -31,8 +33,9 @@\n           \"Content-Type\": \"application/json\",\r\n         },\r\n         body: JSON.stringify({\r\n           fullName,\r\n+          gmail,\r\n           username,\r\n           password,\r\n           confirmPassword,\r\n           gender,\r\n@@ -64,14 +67,15 @@\n export default useSignup;\r\n \r\n function handleInputErrors({\r\n   fullName,\r\n+  gmail\r\n   username,\r\n   password,\r\n   confirmPassword,\r\n   gender,\r\n }) {\r\n-  if (!fullName || !username || !password || !confirmPassword || !gender) {\r\n+  if (!fullName || !gmail || !username || !password || !confirmPassword || !gender) {\r\n     toast.error(\"All fields are required\");\r\n     return false;\r\n   }\r\n \r\n"
                },
                {
                    "date": 1738769565862,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,18 +7,18 @@\n   const { setAuthUser } = useAuthContext();\r\n \r\n   const signup = async ({\r\n     fullName,\r\n-    gmail,\r\n     username,\r\n+    email, // Added email field\r\n     password,\r\n     confirmPassword,\r\n     gender,\r\n   }) => {\r\n     const success = handleInputErrors({\r\n       fullName,\r\n-      gmail,\r\n       username,\r\n+      email, // Added email field\r\n       password,\r\n       confirmPassword,\r\n       gender,\r\n     });\r\n@@ -33,10 +33,10 @@\n           \"Content-Type\": \"application/json\",\r\n         },\r\n         body: JSON.stringify({\r\n           fullName,\r\n-          gmail,\r\n           username,\r\n+          email, // Added email field\r\n           password,\r\n           confirmPassword,\r\n           gender,\r\n         }),\r\n@@ -67,15 +67,15 @@\n export default useSignup;\r\n \r\n function handleInputErrors({\r\n   fullName,\r\n-  gmail\r\n   username,\r\n+  email, // Added email field\r\n   password,\r\n   confirmPassword,\r\n   gender,\r\n }) {\r\n-  if (!fullName || !gmail || !username || !password || !confirmPassword || !gender) {\r\n+  if (!fullName || !username || !email || !password || !confirmPassword || !gender) { // Updated validation\r\n     toast.error(\"All fields are required\");\r\n     return false;\r\n   }\r\n \r\n@@ -88,5 +88,5 @@\n     toast.error(\"Password must be at least 6 characters long\");\r\n     return false;\r\n   }\r\n   return true;\r\n-}\n\\ No newline at end of file\n+}\r\n"
                },
                {
                    "date": 1738769681563,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,18 +7,18 @@\n   const { setAuthUser } = useAuthContext();\r\n \r\n   const signup = async ({\r\n     fullName,\r\n+    email,\r\n     username,\r\n-    email, // Added email field\r\n     password,\r\n     confirmPassword,\r\n     gender,\r\n   }) => {\r\n     const success = handleInputErrors({\r\n       fullName,\r\n+      email,\r\n       username,\r\n-      email, // Added email field\r\n       password,\r\n       confirmPassword,\r\n       gender,\r\n     });\r\n@@ -33,10 +33,10 @@\n           \"Content-Type\": \"application/json\",\r\n         },\r\n         body: JSON.stringify({\r\n           fullName,\r\n+          email,\r\n           username,\r\n-          email, // Added email field\r\n           password,\r\n           confirmPassword,\r\n           gender,\r\n         }),\r\n@@ -67,15 +67,15 @@\n export default useSignup;\r\n \r\n function handleInputErrors({\r\n   fullName,\r\n+  email,\r\n   username,\r\n-  email, // Added email field\r\n   password,\r\n   confirmPassword,\r\n   gender,\r\n }) {\r\n-  if (!fullName || !username || !email || !password || !confirmPassword || !gender) { // Updated validation\r\n+  if (!fullName || !email || !username || !password || !confirmPassword || !gender) { // Updated validation\r\n     toast.error(\"All fields are required\");\r\n     return false;\r\n   }\r\n \r\n"
                },
                {
                    "date": 1738770166742,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,18 +7,19 @@\n   const { setAuthUser } = useAuthContext();\r\n \r\n   const signup = async ({\r\n     fullName,\r\n-    email,\r\n     username,\r\n+    email, // Added email field\r\n     password,\r\n     confirmPassword,\r\n     gender,\r\n   }) => {\r\n+    console.log(\"Signup inputs:\", { fullName, username, email, password, confirmPassword, gender }); // Debug log\r\n     const success = handleInputErrors({\r\n       fullName,\r\n-      email,\r\n       username,\r\n+      email, // Added email field\r\n       password,\r\n       confirmPassword,\r\n       gender,\r\n     });\r\n@@ -33,10 +34,10 @@\n           \"Content-Type\": \"application/json\",\r\n         },\r\n         body: JSON.stringify({\r\n           fullName,\r\n-          email,\r\n           username,\r\n+          email, // Added email field\r\n           password,\r\n           confirmPassword,\r\n           gender,\r\n         }),\r\n@@ -67,15 +68,15 @@\n export default useSignup;\r\n \r\n function handleInputErrors({\r\n   fullName,\r\n-  email,\r\n   username,\r\n+  email, // Added email field\r\n   password,\r\n   confirmPassword,\r\n   gender,\r\n }) {\r\n-  if (!fullName || !email || !username || !password || !confirmPassword || !gender) { // Updated validation\r\n+  if (!fullName || !username || !email || !password || !confirmPassword || !gender) { // Updated validation\r\n     toast.error(\"All fields are required\");\r\n     return false;\r\n   }\r\n \r\n"
                },
                {
                    "date": 1738770323723,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,18 +8,15 @@\n \r\n   const signup = async ({\r\n     fullName,\r\n     username,\r\n-    email, // Added email field\r\n     password,\r\n     confirmPassword,\r\n     gender,\r\n   }) => {\r\n-    console.log(\"Signup inputs:\", { fullName, username, email, password, confirmPassword, gender }); // Debug log\r\n     const success = handleInputErrors({\r\n       fullName,\r\n       username,\r\n-      email, // Added email field\r\n       password,\r\n       confirmPassword,\r\n       gender,\r\n     });\r\n@@ -35,9 +32,8 @@\n         },\r\n         body: JSON.stringify({\r\n           fullName,\r\n           username,\r\n-          email, // Added email field\r\n           password,\r\n           confirmPassword,\r\n           gender,\r\n         }),\r\n@@ -69,14 +65,13 @@\n \r\n function handleInputErrors({\r\n   fullName,\r\n   username,\r\n-  email, // Added email field\r\n   password,\r\n   confirmPassword,\r\n   gender,\r\n }) {\r\n-  if (!fullName || !username || !email || !password || !confirmPassword || !gender) { // Updated validation\r\n+  if (!fullName || !username || !password || !confirmPassword || !gender) {\r\n     toast.error(\"All fields are required\");\r\n     return false;\r\n   }\r\n \r\n@@ -89,5 +84,5 @@\n     toast.error(\"Password must be at least 6 characters long\");\r\n     return false;\r\n   }\r\n   return true;\r\n-}\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738770455570,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,5 +84,5 @@\n     toast.error(\"Password must be at least 6 characters long\");\r\n     return false;\r\n   }\r\n   return true;\r\n-}\n\\ No newline at end of file\n+}\r\n"
                },
                {
                    "date": 1738770827300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,10 +19,11 @@\n       password,\r\n       confirmPassword,\r\n       gender,\r\n     });\r\n-    if (!success) return;\r\n \r\n+    if (!success) return { error: \"Validation failed\" };\r\n+\r\n     setLoading(true);\r\n \r\n     try {\r\n       const res = await fetch(\"/api/auth/signup\", {\r\n@@ -39,38 +40,35 @@\n         }),\r\n       });\r\n \r\n       const data = await res.json();\r\n-      if (data.error) {\r\n-        throw new Error(data.error);\r\n+\r\n+      if (!res.ok) {\r\n+        throw new Error(data.error || \"Signup failed! Please try again.\");\r\n       }\r\n+\r\n+      localStorage.setItem(\"chat-user\", JSON.stringify(data));\r\n+      setAuthUser(data);\r\n       \r\n-      localStorage.setItem('chat-user', JSON.stringify(data));\r\n-      setAuthUser(data);\r\n       toast.success(\"Signup successful!\");\r\n-      console.log(\"Signup successful, data received:\", data);\r\n-      return data;\r\n+      return { success: true, data };\r\n     } catch (error) {\r\n       toast.error(error.message);\r\n-      console.error(\"Signup error:\", error);\r\n-      return null;\r\n+      console.error(\"Signup error:\", error.message);\r\n+      return { error: error.message };\r\n     } finally {\r\n       setLoading(false);\r\n     }\r\n   };\r\n \r\n   return { signup, loading };\r\n };\r\n \r\n+// ✅ Only ONE default export (fixes the error)\r\n export default useSignup;\r\n \r\n-function handleInputErrors({\r\n-  fullName,\r\n-  username,\r\n-  password,\r\n-  confirmPassword,\r\n-  gender,\r\n-}) {\r\n+// ✅ Use named export for `handleInputErrors`\r\n+export function handleInputErrors({ fullName, username, password, confirmPassword, gender }) {\r\n   if (!fullName || !username || !password || !confirmPassword || !gender) {\r\n     toast.error(\"All fields are required\");\r\n     return false;\r\n   }\r\n@@ -83,6 +81,7 @@\n   if (password.length < 6) {\r\n     toast.error(\"Password must be at least 6 characters long\");\r\n     return false;\r\n   }\r\n+\r\n   return true;\r\n }\r\n"
                },
                {
                    "date": 1738838409062,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,87 +1,55 @@\n import { useState } from \"react\";\r\n-import { toast } from \"react-hot-toast\";\r\n-import { useAuthContext } from \"../src/context/AuthContext\";\r\n+import toast from \"react-hot-toast\";\r\n+import { useAuthContext } from \"../context/AuthContext\";\r\n \r\n const useSignup = () => {\r\n-  const [loading, setLoading] = useState(false);\r\n-  const { setAuthUser } = useAuthContext();\r\n+\tconst [loading, setLoading] = useState(false);\r\n+\tconst { setAuthUser } = useAuthContext();\r\n \r\n-  const signup = async ({\r\n-    fullName,\r\n-    username,\r\n-    password,\r\n-    confirmPassword,\r\n-    gender,\r\n-  }) => {\r\n-    const success = handleInputErrors({\r\n-      fullName,\r\n-      username,\r\n-      password,\r\n-      confirmPassword,\r\n-      gender,\r\n-    });\r\n+\tconst signup = async ({ fullName, username, password, confirmPassword, gender }) => {\r\n+\t\tconst success = handleInputErrors({ fullName, username, password, confirmPassword, gender });\r\n+\t\tif (!success) return;\r\n \r\n-    if (!success) return { error: \"Validation failed\" };\r\n+\t\tsetLoading(true);\r\n+\t\ttry {\r\n+\t\t\tconst res = await fetch(\"/api/auth/signup\", {\r\n+\t\t\t\tmethod: \"POST\",\r\n+\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n+\t\t\t\tbody: JSON.stringify({ fullName, username, password, confirmPassword, gender }),\r\n+\t\t\t});\r\n \r\n-    setLoading(true);\r\n+\t\t\tconst data = await res.json();\r\n+\t\t\tif (data.error) {\r\n+\t\t\t\tthrow new Error(data.error);\r\n+\t\t\t}\r\n+\t\t\tlocalStorage.setItem(\"chat-user\", JSON.stringify(data));\r\n+\t\t\tsetAuthUser(data);\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t} finally {\r\n+\t\t\tsetLoading(false);\r\n+\t\t}\r\n+\t};\r\n \r\n-    try {\r\n-      const res = await fetch(\"/api/auth/signup\", {\r\n-        method: \"POST\",\r\n-        headers: {\r\n-          \"Content-Type\": \"application/json\",\r\n-        },\r\n-        body: JSON.stringify({\r\n-          fullName,\r\n-          username,\r\n-          password,\r\n-          confirmPassword,\r\n-          gender,\r\n-        }),\r\n-      });\r\n-\r\n-      const data = await res.json();\r\n-\r\n-      if (!res.ok) {\r\n-        throw new Error(data.error || \"Signup failed! Please try again.\");\r\n-      }\r\n-\r\n-      localStorage.setItem(\"chat-user\", JSON.stringify(data));\r\n-      setAuthUser(data);\r\n-      \r\n-      toast.success(\"Signup successful!\");\r\n-      return { success: true, data };\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-      console.error(\"Signup error:\", error.message);\r\n-      return { error: error.message };\r\n-    } finally {\r\n-      setLoading(false);\r\n-    }\r\n-  };\r\n-\r\n-  return { signup, loading };\r\n+\treturn { loading, signup };\r\n };\r\n-\r\n-// ✅ Only ONE default export (fixes the error)\r\n export default useSignup;\r\n \r\n-// ✅ Use named export for `handleInputErrors`\r\n-export function handleInputErrors({ fullName, username, password, confirmPassword, gender }) {\r\n-  if (!fullName || !username || !password || !confirmPassword || !gender) {\r\n-    toast.error(\"All fields are required\");\r\n-    return false;\r\n-  }\r\n+function handleInputErrors({ fullName, username, password, confirmPassword, gender }) {\r\n+\tif (!fullName || !username || !password || !confirmPassword || !gender) {\r\n+\t\ttoast.error(\"Please fill in all fields\");\r\n+\t\treturn false;\r\n+\t}\r\n \r\n-  if (password !== confirmPassword) {\r\n-    toast.error(\"Passwords do not match\");\r\n-    return false;\r\n-  }\r\n+\tif (password !== confirmPassword) {\r\n+\t\ttoast.error(\"Passwords do not match\");\r\n+\t\treturn false;\r\n+\t}\r\n \r\n-  if (password.length < 6) {\r\n-    toast.error(\"Password must be at least 6 characters long\");\r\n-    return false;\r\n-  }\r\n+\tif (password.length < 6) {\r\n+\t\ttoast.error(\"Password must be at least 6 characters\");\r\n+\t\treturn false;\r\n+\t}\r\n \r\n-  return true;\r\n-}\r\n+\treturn true;\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738838808432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,55 +1,86 @@\n import { useState } from \"react\";\r\n-import toast from \"react-hot-toast\";\r\n-import { useAuthContext } from \"../context/AuthContext\";\r\n+import { toast } from \"react-hot-toast\";\r\n+import { useAuthContext } from \"../src/context/AuthContext\";\r\n \r\n const useSignup = () => {\r\n-\tconst [loading, setLoading] = useState(false);\r\n-\tconst { setAuthUser } = useAuthContext();\r\n+  const [loading, setLoading] = useState(false);\r\n+  const { setAuthUser } = useAuthContext();\r\n \r\n-\tconst signup = async ({ fullName, username, password, confirmPassword, gender }) => {\r\n-\t\tconst success = handleInputErrors({ fullName, username, password, confirmPassword, gender });\r\n-\t\tif (!success) return;\r\n+  const signup = async ({\r\n+    fullName,\r\n+    username,\r\n+    password,\r\n+    confirmPassword,\r\n+    gender,\r\n+  }) => {\r\n+    const success = handleInputErrors({\r\n+      fullName,\r\n+      username,\r\n+      password,\r\n+      confirmPassword,\r\n+      gender,\r\n+    });\r\n \r\n-\t\tsetLoading(true);\r\n-\t\ttry {\r\n-\t\t\tconst res = await fetch(\"/api/auth/signup\", {\r\n-\t\t\t\tmethod: \"POST\",\r\n-\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n-\t\t\t\tbody: JSON.stringify({ fullName, username, password, confirmPassword, gender }),\r\n-\t\t\t});\r\n+    if (!success) return { error: \"Validation failed\" };\r\n \r\n-\t\t\tconst data = await res.json();\r\n-\t\t\tif (data.error) {\r\n-\t\t\t\tthrow new Error(data.error);\r\n-\t\t\t}\r\n-\t\t\tlocalStorage.setItem(\"chat-user\", JSON.stringify(data));\r\n-\t\t\tsetAuthUser(data);\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t} finally {\r\n-\t\t\tsetLoading(false);\r\n-\t\t}\r\n-\t};\r\n+    setLoading(true);\r\n \r\n-\treturn { loading, signup };\r\n+    try {\r\n\\ No newline at end of file\n+      const res = await fetch(\"/api/auth/signup\", {\r\n+        method: \"POST\",\r\n+        headers: {\r\n+          \"Content-Type\": \"application/json\",\r\n+        },\r\n+        body: JSON.stringify({\r\n+          fullName,\r\n+          username,\r\n+          password,\r\n+          confirmPassword,\r\n+          gender,\r\n+        }),\r\n+      });\r\n+\r\n+      const data = await res.json();\r\n+\r\n+      if (!res.ok) {\r\n+        throw new Error(data.error || \"Signup failed! Please try again.\");\r\n+      }\r\n+\r\n+      localStorage.setItem(\"chat-user\", JSON.stringify(data));\r\n+      setAuthUser(data);\r\n+\r\n+      toast.success(\"Signup successful!\");\r\n+      return { success: true, data };\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n+      console.error(\"Signup error:\", error.message);\r\n+      return { error: error.message };\r\n+    } finally {\r\n+      setLoading(false);\r\n+    }\r\n+  };\r\n+\r\n+  return { signup, loading };\r\n };\r\n-export default useSignup;\r\n \r\n-function handleInputErrors({ fullName, username, password, confirmPassword, gender }) {\r\n-\tif (!fullName || !username || !password || !confirmPassword || !gender) {\r\n-\t\ttoast.error(\"Please fill in all fields\");\r\n-\t\treturn false;\r\n-\t}\r\n+// Define handleInputErrors inside this file\r\n+export function handleInputErrors({ fullName, username, password, confirmPassword, gender }) {\r\n+  if (!fullName || !username || !password || !confirmPassword || !gender) {\r\n+    toast.error(\"All fields are required\");\r\n+    return false;\r\n+  }\r\n \r\n-\tif (password !== confirmPassword) {\r\n-\t\ttoast.error(\"Passwords do not match\");\r\n-\t\treturn false;\r\n-\t}\r\n+  if (password !== confirmPassword) {\r\n+    toast.error(\"Passwords do not match\");\r\n+    return false;\r\n+  }\r\n \r\n-\tif (password.length < 6) {\r\n-\t\ttoast.error(\"Password must be at least 6 characters\");\r\n-\t\treturn false;\r\n-\t}\r\n+  if (password.length < 6) {\r\n+    toast.error(\"Password must be at least 6 characters long\");\r\n+    return false;\r\n+  }\r\n \r\n-\treturn true;\r\n-}\n+  return true;\r\n+}\r\n+\r\n+export default useSignup;\r\n"
                }
            ],
            "date": 1738276627259,
            "name": "Commit-0",
            "content": "import { useState } from \"react\";\r\nimport { toast } from \"react-hot-toast\";\r\n\r\nconst useSignup = () => {\r\n  const [loading, setloading] = useState(false);\r\n\r\n  const signup = async ({\r\n    fullName,\r\n    username,\r\n    password,\r\n    confirmPassword,\r\n    gender,\r\n  }) => {\r\n    const success = handleInputErrors({\r\n      fullName,\r\n      username,\r\n      password,\r\n      confirmPassword,\r\n      gender,\r\n    });\r\n    if (!success) {\r\n      return false;\r\n    }\r\n  };\r\n};\r\n\r\nexport default useSignup;\r\n\r\nfunction handleInputErrors({\r\n  fullName,\r\n  username,\r\n  password,\r\n  confirmPassword,\r\n  gender,\r\n}) {\r\n  if (!fullName || !username || !password || !confirmPassword || !gender) {\r\n    toast.error(\"All fields are required\");\r\n    return false;\r\n  }\r\n}\r\n"
        }
    ]
}