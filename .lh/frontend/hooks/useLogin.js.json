{
    "sourceFile": "frontend/hooks/useLogin.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 5,
            "patches": [
                {
                    "date": 1738316009996,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1738316163025,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,11 @@\n-import { set } from \"mongoose\";\r\n import { useState } from \"react\";\r\n import { toast } from \"react-hot-toast\";\r\n+import { useAuthContext } from \"../src/context/AuthContext\"; // Make sure this import path is correct\r\n \r\n const useLogin = () => {\r\n   const [loading, setLoading] = useState(false);\r\n-  const { setAuthUser } = useAuthContext();\r\n+  const { setAuthUser } = useAuthContext(); // Destructure setAuthUser from useAuthContext\r\n \r\n   const login = async (username, password) => {\r\n     setLoading(true);\r\n     try {\r\n@@ -25,8 +25,8 @@\n     } finally {\r\n       setLoading(false);\r\n     }\r\n   };\r\n-  return { login, loading }; // Return after the login function\r\n+  return { login, loading }; // Return the login function and loading state\r\n };\r\n \r\n export default useLogin;\r\n"
                },
                {
                    "date": 1738358827482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,8 +6,11 @@\n   const [loading, setLoading] = useState(false);\r\n   const { setAuthUser } = useAuthContext(); // Destructure setAuthUser from useAuthContext\r\n \r\n   const login = async (username, password) => {\r\n+\r\n+    const success = handleInputErrors(username, password);\r\n+    if (!success) return;\r\n     setLoading(true);\r\n     try {\r\n       const res = await fetch(\"/api/auth/login\", {\r\n         method: \"POST\",\r\n@@ -29,4 +32,29 @@\n   return { login, loading }; // Return the login function and loading state\r\n };\r\n \r\n export default useLogin;\r\n+\r\n+function handleInputErrors({\r\n+  fullName,\r\n+  username,\r\n+  password,\r\n+  confirmPassword,\r\n+  gender,\r\n+}) {\r\n+  if (!fullName || !username || !password || !confirmPassword || !gender) {\r\n+    toast.error(\"All fields are required\");\r\n+    return false;\r\n+  }\r\n+\r\n+  if (password !== confirmPassword) {\r\n+    toast.error(\"Passwords do not match\");\r\n+    return false;\r\n+  }\r\n+\r\n+  if (password.length < 6) {\r\n+    toast.error(\"Password must be at least 6 characters long\");\r\n+    return false;\r\n+  }\r\n+  return true;\r\n+}\r\n+\r\n"
                },
                {
                    "date": 1738360282113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,28 +33,14 @@\n };\r\n \r\n export default useLogin;\r\n \r\n-function handleInputErrors({\r\n-  fullName,\r\n-  username,\r\n-  password,\r\n-  confirmPassword,\r\n-  gender,\r\n-}) {\r\n-  if (!fullName || !username || !password || !confirmPassword || !gender) {\r\n+function handleInputErrors(username, password)\r\n+ {\r\n+  if ( !username || !password ) {\r\n     toast.error(\"All fields are required\");\r\n     return false;\r\n   }\r\n \r\n-  if (password !== confirmPassword) {\r\n-    toast.error(\"Passwords do not match\");\r\n-    return false;\r\n-  }\r\n-\r\n-  if (password.length < 6) {\r\n-    toast.error(\"Password must be at least 6 characters long\");\r\n-    return false;\r\n-  }\r\n   return true;\r\n }\r\n \r\n"
                },
                {
                    "date": 1738838353630,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,46 +1,45 @@\n import { useState } from \"react\";\r\n-import { toast } from \"react-hot-toast\";\r\n-import { useAuthContext } from \"../src/context/AuthContext\"; // Make sure this import path is correct\r\n+import toast from \"react-hot-toast\";\r\n+import { useAuthContext } from \"../context/AuthContext\";\r\n \r\n const useLogin = () => {\r\n-  const [loading, setLoading] = useState(false);\r\n-  const { setAuthUser } = useAuthContext(); // Destructure setAuthUser from useAuthContext\r\n+\tconst [loading, setLoading] = useState(false);\r\n+\tconst { setAuthUser } = useAuthContext();\r\n \r\n-  const login = async (username, password) => {\r\n+\tconst login = async (username, password) => {\r\n+\t\tconst success = handleInputErrors(username, password);\r\n+\t\tif (!success) return;\r\n+\t\tsetLoading(true);\r\n+\t\ttry {\r\n+\t\t\tconst res = await fetch(\"/api/auth/login\", {\r\n+\t\t\t\tmethod: \"POST\",\r\n+\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n+\t\t\t\tbody: JSON.stringify({ username, password }),\r\n+\t\t\t});\r\n \r\n-    const success = handleInputErrors(username, password);\r\n-    if (!success) return;\r\n-    setLoading(true);\r\n-    try {\r\n-      const res = await fetch(\"/api/auth/login\", {\r\n-        method: \"POST\",\r\n-        headers: { \"Content-Type\": \"application/json\" },\r\n-        body: JSON.stringify({ username, password }),\r\n-      });\r\n-      const data = await res.json();\r\n-      if (data.error) {\r\n-        throw new Error(data.error);\r\n-      }\r\n-      localStorage.setItem(\"chat-user\", JSON.stringify(data));\r\n-      setAuthUser(data);\r\n-    } catch (error) {\r\n-      toast.error(error.message);\r\n-    } finally {\r\n-      setLoading(false);\r\n-    }\r\n-  };\r\n-  return { login, loading }; // Return the login function and loading state\r\n+\t\t\tconst data = await res.json();\r\n+\t\t\tif (data.error) {\r\n+\t\t\t\tthrow new Error(data.error);\r\n+\t\t\t}\r\n+\r\n+\t\t\tlocalStorage.setItem(\"chat-user\", JSON.stringify(data));\r\n+\t\t\tsetAuthUser(data);\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t} finally {\r\n+\t\t\tsetLoading(false);\r\n+\t\t}\r\n+\t};\r\n+\r\n+\treturn { loading, login };\r\n };\r\n-\r\n export default useLogin;\r\n \r\n-function handleInputErrors(username, password)\r\n- {\r\n-  if ( !username || !password ) {\r\n-    toast.error(\"All fields are required\");\r\n-    return false;\r\n-  }\r\n+function handleInputErrors(username, password) {\r\n+\tif (!username || !password) {\r\n+\t\ttoast.error(\"Please fill in all fields\");\r\n+\t\treturn false;\r\n+\t}\r\n \r\n-  return true;\r\n-}\r\n-\r\n+\treturn true;\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738838769222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,45 +1,46 @@\n import { useState } from \"react\";\r\n-import toast from \"react-hot-toast\";\r\n-import { useAuthContext } from \"../context/AuthContext\";\r\n+import { toast } from \"react-hot-toast\";\r\n+import { useAuthContext } from \"../src/context/AuthContext\"; // Make sure this import path is correct\r\n \r\n const useLogin = () => {\r\n-\tconst [loading, setLoading] = useState(false);\r\n-\tconst { setAuthUser } = useAuthContext();\r\n+  const [loading, setLoading] = useState(false);\r\n+  const { setAuthUser } = useAuthContext(); // Destructure setAuthUser from useAuthContext\r\n \r\n-\tconst login = async (username, password) => {\r\n-\t\tconst success = handleInputErrors(username, password);\r\n-\t\tif (!success) return;\r\n-\t\tsetLoading(true);\r\n-\t\ttry {\r\n-\t\t\tconst res = await fetch(\"/api/auth/login\", {\r\n-\t\t\t\tmethod: \"POST\",\r\n-\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n-\t\t\t\tbody: JSON.stringify({ username, password }),\r\n-\t\t\t});\r\n+  const login = async (username, password) => {\r\n \r\n-\t\t\tconst data = await res.json();\r\n-\t\t\tif (data.error) {\r\n-\t\t\t\tthrow new Error(data.error);\r\n-\t\t\t}\r\n+    const success = handleInputErrors(username, password);\r\n+    if (!success) return;\r\n+    setLoading(true);\r\n+    try {\r\n+      const res = await fetch(\"/api/auth/login\", {\r\n+        method: \"POST\",\r\n+        headers: { \"Content-Type\": \"application/json\" },\r\n+        body: JSON.stringify({ username, password }),\r\n+      });\r\n+      const data = await res.json();\r\n+      if (data.error) {\r\n+        throw new Error(data.error);\r\n+      }\r\n+      localStorage.setItem(\"chat-user\", JSON.stringify(data));\r\n+      setAuthUser(data);\r\n+    } catch (error) {\r\n+      toast.error(error.message);\r\n\\ No newline at end of file\n+    } finally {\r\n+      setLoading(false);\r\n+    }\r\n+  };\r\n+  return { login, loading }; // Return the login function and loading state\r\n+};\r\n \r\n-\t\t\tlocalStorage.setItem(\"chat-user\", JSON.stringify(data));\r\n-\t\t\tsetAuthUser(data);\r\n-\t\t} catch (error) {\r\n-\t\t\ttoast.error(error.message);\r\n-\t\t} finally {\r\n-\t\t\tsetLoading(false);\r\n-\t\t}\r\n-\t};\r\n-\r\n-\treturn { loading, login };\r\n-};\r\n export default useLogin;\r\n \r\n-function handleInputErrors(username, password) {\r\n-\tif (!username || !password) {\r\n-\t\ttoast.error(\"Please fill in all fields\");\r\n-\t\treturn false;\r\n-\t}\r\n+function handleInputErrors(username, password)\r\n+ {\r\n+  if ( !username || !password ) {\r\n+    toast.error(\"All fields are required\");\r\n+    return false;\r\n+  }\r\n \r\n-\treturn true;\r\n-}\n+  return true;\r\n+}\r\n+\r\n"
                }
            ],
            "date": 1738316009996,
            "name": "Commit-0",
            "content": "import { set } from \"mongoose\";\r\nimport { useState } from \"react\";\r\nimport { toast } from \"react-hot-toast\";\r\n\r\nconst useLogin = () => {\r\n  const [loading, setLoading] = useState(false);\r\n  const { setAuthUser } = useAuthContext();\r\n\r\n  const login = async (username, password) => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch(\"/api/auth/login\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ username, password }),\r\n      });\r\n      const data = await res.json();\r\n      if (data.error) {\r\n        throw new Error(data.error);\r\n      }\r\n      localStorage.setItem(\"chat-user\", JSON.stringify(data));\r\n      setAuthUser(data);\r\n    } catch (error) {\r\n      toast.error(error.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n  return { login, loading }; // Return after the login function\r\n};\r\n\r\nexport default useLogin;\r\n"
        }
    ]
}