{
    "sourceFile": "frontend/hooks/useLogout.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 4,
            "patches": [
                {
                    "date": 1738312663383,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1738313623159,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,10 @@\n import { useState } from \"react\";\r\n+import { useAuthContext } from '../src/context/AuthContext'\r\n \r\n const useLogout = () => {\r\n   const [loading, setLoading] = useState(false);\r\n+  const {setAuthUser} = useAuthContext()\r\n \r\n   const loading = async () => {\r\n     setLoading(true);\r\n     try {\r\n@@ -13,12 +15,17 @@\n       if(data.error) {\r\n         throw new Error(data.error)\r\n       }\r\n       localStorage.removeItem(\"chat-user\")\r\n+      setAuthUser(null)\r\n     } catch (error) {\r\n-\r\n+       toast.error(error)\r\n     } finally {\r\n \r\n       setLoading(false);\r\n     }\r\n   };\r\n+  return { loading, logout };\r\n+\r\n };\r\n+\r\n+export default useLogout;\r\n"
                },
                {
                    "date": 1738313838504,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,31 +1,31 @@\n import { useState } from \"react\";\r\n-import { useAuthContext } from '../src/context/AuthContext'\r\n+import { useAuthContext } from '../src/context/AuthContext';\r\n+import { toast } from \"react-hot-toast\"; // Import toast to handle error notifications\r\n \r\n const useLogout = () => {\r\n   const [loading, setLoading] = useState(false);\r\n-  const {setAuthUser} = useAuthContext()\r\n+  const { setAuthUser } = useAuthContext();\r\n \r\n-  const loading = async () => {\r\n+  const logout = async () => {  // Renamed this function to 'logout'\r\n     setLoading(true);\r\n     try {\r\n       const res = await fetch(\"/api/auth/logout\", {\r\n-\r\n+        method: \"POST\", // You may need to specify the method if not already set\r\n       });\r\n       const data = await res.json();\r\n-      if(data.error) {\r\n-        throw new Error(data.error)\r\n+      if (data.error) {\r\n+        throw new Error(data.error);\r\n       }\r\n-      localStorage.removeItem(\"chat-user\")\r\n-      setAuthUser(null)\r\n+      localStorage.removeItem(\"chat-user\");\r\n+      setAuthUser(null);\r\n     } catch (error) {\r\n-       toast.error(error)\r\n+      toast.error(error.message); // Fixed error handling, show the error message\r\n     } finally {\r\n-\r\n       setLoading(false);\r\n     }\r\n   };\r\n-  return { loading, logout };\r\n \r\n+  return { loading, logout }; // Return 'loading' and 'logout' properly\r\n };\r\n \r\n export default useLogout;\r\n"
                },
                {
                    "date": 1738838372565,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,31 +1,32 @@\n import { useState } from \"react\";\r\n-import { useAuthContext } from '../src/context/AuthContext';\r\n-import { toast } from \"react-hot-toast\"; // Import toast to handle error notifications\r\n+import { useAuthContext } from \"../context/AuthContext\";\r\n+import toast from \"react-hot-toast\";\r\n \r\n const useLogout = () => {\r\n-  const [loading, setLoading] = useState(false);\r\n-  const { setAuthUser } = useAuthContext();\r\n+\tconst [loading, setLoading] = useState(false);\r\n+\tconst { setAuthUser } = useAuthContext();\r\n \r\n-  const logout = async () => {  // Renamed this function to 'logout'\r\n-    setLoading(true);\r\n-    try {\r\n-      const res = await fetch(\"/api/auth/logout\", {\r\n-        method: \"POST\", // You may need to specify the method if not already set\r\n-      });\r\n-      const data = await res.json();\r\n-      if (data.error) {\r\n-        throw new Error(data.error);\r\n-      }\r\n-      localStorage.removeItem(\"chat-user\");\r\n-      setAuthUser(null);\r\n-    } catch (error) {\r\n-      toast.error(error.message); // Fixed error handling, show the error message\r\n-    } finally {\r\n-      setLoading(false);\r\n-    }\r\n-  };\r\n+\tconst logout = async () => {\r\n+\t\tsetLoading(true);\r\n+\t\ttry {\r\n+\t\t\tconst res = await fetch(\"/api/auth/logout\", {\r\n+\t\t\t\tmethod: \"POST\",\r\n+\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\r\n+\t\t\t});\r\n+\t\t\tconst data = await res.json();\r\n+\t\t\tif (data.error) {\r\n+\t\t\t\tthrow new Error(data.error);\r\n+\t\t\t}\r\n \r\n-  return { loading, logout }; // Return 'loading' and 'logout' properly\r\n+\t\t\tlocalStorage.removeItem(\"chat-user\");\r\n+\t\t\tsetAuthUser(null);\r\n+\t\t} catch (error) {\r\n+\t\t\ttoast.error(error.message);\r\n+\t\t} finally {\r\n+\t\t\tsetLoading(false);\r\n+\t\t}\r\n+\t};\r\n+\r\n+\treturn { loading, logout };\r\n };\r\n-\r\n-export default useLogout;\r\n+export default useLogout;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738840541158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import { useState } from \"react\";\r\n-import { useAuthContext } from \"../context/AuthContext\";\r\n+import { useAuthContext} from '../src/context/AuthContext';\r\n import toast from \"react-hot-toast\";\r\n \r\n const useLogout = () => {\r\n \tconst [loading, setLoading] = useState(false);\r\n"
                }
            ],
            "date": 1738312663383,
            "name": "Commit-0",
            "content": "import { useState } from \"react\";\r\n\r\nconst useLogout = () => {\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const loading = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const res = await fetch(\"/api/auth/logout\", {\r\n\r\n      });\r\n      const data = await res.json();\r\n      if(data.error) {\r\n        throw new Error(data.error)\r\n      }\r\n      localStorage.removeItem(\"chat-user\")\r\n    } catch (error) {\r\n\r\n    } finally {\r\n\r\n      setLoading(false);\r\n    }\r\n  };\r\n};\r\n"
        }
    ]
}