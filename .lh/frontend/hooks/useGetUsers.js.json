{
    "sourceFile": "frontend/hooks/useGetUsers.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 6,
            "patches": [
                {
                    "date": 1738822617735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1738822932550,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { useState, useEffect } from \"react\";\r\n import { toast } from \"react-hot-toast\";\r\n-import { useAuthContext } from \"../context/AuthContext\";\r\n+import { useAuthContext } from \"../context/AuthContext.jsx\"; // Updated import path\r\n \r\n const useGetUsers = () => {\r\n   const [loading, setLoading] = useState(true);\r\n   const [users, setUsers] = useState([]);\r\n@@ -26,5 +26,5 @@\n \r\n   return { loading, users };\r\n };\r\n \r\n-export default useGetUsers;\n\\ No newline at end of file\n+export default useGetUsers;\r\n"
                },
                {
                    "date": 1738823032239,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { useState, useEffect } from \"react\";\r\n import { toast } from \"react-hot-toast\";\r\n-import { useAuthContext } from \"../context/AuthContext.jsx\"; // Updated import path\r\n+import { useAuthContext } from '../src/context/AuthContext';\r\n \r\n const useGetUsers = () => {\r\n   const [loading, setLoading] = useState(true);\r\n   const [users, setUsers] = useState([]);\r\n"
                },
                {
                    "date": 1738823131586,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { useState, useEffect } from \"react\";\r\n import { toast } from \"react-hot-toast\";\r\n-import { useAuthContext } from '../src/context/AuthContext';\r\n+import { useAuthContext } from \"../context/AuthContext\";\r\n \r\n const useGetUsers = () => {\r\n   const [loading, setLoading] = useState(true);\r\n   const [users, setUsers] = useState([]);\r\n"
                },
                {
                    "date": 1738823174020,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,26 @@\n import { useState, useEffect } from \"react\";\r\n import { toast } from \"react-hot-toast\";\r\n-import { useAuthContext } from \"../context/AuthContext\";\r\n+import { useAuthContext } from \"../context/AuthContext.jsx\"; // Updated import path\r\n \r\n const useGetUsers = () => {\r\n   const [loading, setLoading] = useState(true);\r\n   const [users, setUsers] = useState([]);\r\n-  const { user } = useAuthContext(); // Get the logged-in user context\r\n+  const { user, token } = useAuthContext(); // Get the logged-in user context and token\r\n \r\n   useEffect(() => {\r\n     const fetchUsers = async () => {\r\n       try {\r\n-        const response = await fetch('/api/users'); // Adjust the endpoint as necessary\r\n+        const response = await fetch('/api/users', {\r\n+          headers: {\r\n+            'Authorization': `Bearer ${token}`, // Include the token in the headers\r\n+          },\r\n+        });\r\n+        \r\n+        if (!response.ok) {\r\n+          throw new Error('Failed to fetch users');\r\n+        }\r\n+\r\n         const data = await response.json();\r\n         setUsers(data);\r\n       } catch (error) {\r\n         toast.error(\"Failed to fetch users\");\r\n@@ -20,10 +29,14 @@\n         setLoading(false);\r\n       }\r\n     };\r\n \r\n-    fetchUsers();\r\n-  }, [user]); // Re-fetch when the user changes\r\n+    if (token) { // Only fetch users if the token is available\r\n+      fetchUsers();\r\n+    } else {\r\n+      setLoading(false); // If no token, stop loading\r\n+    }\r\n+  }, [user, token]); // Re-fetch when the user or token changes\r\n \r\n   return { loading, users };\r\n };\r\n \r\n"
                },
                {
                    "date": 1738823259775,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,26 +1,17 @@\n import { useState, useEffect } from \"react\";\r\n import { toast } from \"react-hot-toast\";\r\n-import { useAuthContext } from \"../context/AuthContext.jsx\"; // Updated import path\r\n+import { useAuthContext } from \"../context/AuthContext\";\r\n \r\n const useGetUsers = () => {\r\n   const [loading, setLoading] = useState(true);\r\n   const [users, setUsers] = useState([]);\r\n-  const { user, token } = useAuthContext(); // Get the logged-in user context and token\r\n+  const { user } = useAuthContext(); // Get the logged-in user context\r\n \r\n   useEffect(() => {\r\n     const fetchUsers = async () => {\r\n       try {\r\n-        const response = await fetch('/api/users', {\r\n-          headers: {\r\n-            'Authorization': `Bearer ${token}`, // Include the token in the headers\r\n-          },\r\n-        });\r\n-        \r\n-        if (!response.ok) {\r\n-          throw new Error('Failed to fetch users');\r\n-        }\r\n-\r\n+        const response = await fetch('/api/users'); // Adjust the endpoint as necessary\r\n         const data = await response.json();\r\n         setUsers(data);\r\n       } catch (error) {\r\n         toast.error(\"Failed to fetch users\");\r\n@@ -29,8 +20,17 @@\n         setLoading(false);\r\n       }\r\n     };\r\n \r\n+    fetchUsers();\r\n+  }, [user]); // Re-fetch when the user changes\r\n+\r\n+  return { loading, users };\r\n+};\r\n+\r\n+export default useGetUsers;\r\n+    };\r\n+\r\n     if (token) { // Only fetch users if the token is available\r\n       fetchUsers();\r\n     } else {\r\n       setLoading(false); // If no token, stop loading\r\n"
                },
                {
                    "date": 1738823325338,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,26 @@\n import { useState, useEffect } from \"react\";\r\n import { toast } from \"react-hot-toast\";\r\n-import { useAuthContext } from \"../context/AuthContext\";\r\n+import { useAuthContext } from '../src/context/AuthContext'; // Corrected import path\r\n \r\n const useGetUsers = () => {\r\n   const [loading, setLoading] = useState(true);\r\n   const [users, setUsers] = useState([]);\r\n-  const { user } = useAuthContext(); // Get the logged-in user context\r\n+  const { user, token } = useAuthContext(); // Get the logged-in user context and token\r\n \r\n   useEffect(() => {\r\n     const fetchUsers = async () => {\r\n       try {\r\n-        const response = await fetch('/api/users'); // Adjust the endpoint as necessary\r\n+        const response = await fetch('/api/users', {\r\n+          headers: {\r\n+            'Authorization': `Bearer ${token}`, // Include the token in the headers\r\n+          },\r\n+        });\r\n+        \r\n+        if (!response.ok) {\r\n+          throw new Error('Failed to fetch users');\r\n+        }\r\n+\r\n         const data = await response.json();\r\n         setUsers(data);\r\n       } catch (error) {\r\n         toast.error(\"Failed to fetch users\");\r\n@@ -20,17 +29,8 @@\n         setLoading(false);\r\n       }\r\n     };\r\n \r\n-    fetchUsers();\r\n-  }, [user]); // Re-fetch when the user changes\r\n-\r\n-  return { loading, users };\r\n-};\r\n-\r\n-export default useGetUsers;\r\n-    };\r\n-\r\n     if (token) { // Only fetch users if the token is available\r\n       fetchUsers();\r\n     } else {\r\n       setLoading(false); // If no token, stop loading\r\n"
                }
            ],
            "date": 1738822617735,
            "name": "Commit-0",
            "content": "import { useState, useEffect } from \"react\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { useAuthContext } from \"../context/AuthContext\";\r\n\r\nconst useGetUsers = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [users, setUsers] = useState([]);\r\n  const { user } = useAuthContext(); // Get the logged-in user context\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const response = await fetch('/api/users'); // Adjust the endpoint as necessary\r\n        const data = await response.json();\r\n        setUsers(data);\r\n      } catch (error) {\r\n        toast.error(\"Failed to fetch users\");\r\n        console.error(\"Error fetching users:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchUsers();\r\n  }, [user]); // Re-fetch when the user changes\r\n\r\n  return { loading, users };\r\n};\r\n\r\nexport default useGetUsers;"
        }
    ]
}