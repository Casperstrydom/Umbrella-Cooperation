{
    "sourceFile": "frontend/src/components/sidebar/Conversation.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 44,
            "patches": [
                {
                    "date": 1738568574269,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1738568797836,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,31 +1,30 @@\n-const Conversation = (conversation,lastIdx,emoji) => {\r\n-    return (\r\n-      <>\r\n-        <div className=\"flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\">\r\n-          {/* Avatar Section */}\r\n-          <div className=\"avatar online\">\r\n-            <div className=\"w-12 rounded-full\">\r\n-              <img\r\n-                src={conversation.profilePic}\r\n-                alt=\"user avatar\"\r\n-              />\r\n-            </div>\r\n+const Conversation = ({ conversation, lastIdx, emoji }) => { // Fix destructuring\r\n+  return (\r\n+    <>\r\n+      <div className=\"flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\">\r\n+        {/* Avatar Section */}\r\n+        <div className=\"avatar online\">\r\n+          <div className=\"w-12 rounded-full\">\r\n+            <img\r\n+              src={conversation.profilePic}\r\n+              alt=\"user avatar\"\r\n+            />\r\n           </div>\r\n-  \r\n-          {/* User Info Section */}\r\n-          <div className=\"flex flex-col flex-1\">\r\n-            <div className=\"flex gap-3 justify-between\">\r\n-              <p className=\"font-bold text-gray-200\">{conversation.fullName}</p>\r\n-              <span className=\"text-xl\">{emoji}</span>\r\n-            </div>\r\n\\ No newline at end of file\n+        </div>\r\n+\r\n+        {/* User Info Section */}\r\n+        <div className=\"flex flex-col flex-1\">\r\n+          <div className=\"flex gap-3 justify-between\">\r\n+            <p className=\"font-bold text-gray-200\">{conversation.fullName}</p> {/* Ensure this field exists */}\r\n+            <span className=\"text-xl\">{emoji}</span>\r\n           </div>\r\n         </div>\r\n-  \r\n-        {/* Divider */}\r\n-        {!lastIdx && <div className='divider my-0 py-0 h-2'/>}\r\n-      </>\r\n-    );\r\n-  };\r\n-  \r\n-  export default Conversation;\r\n-  \n+      </div>\r\n+\r\n+      {/* Divider */}\r\n+      {!lastIdx && <div className='divider my-0 py-0 h-2' />}\r\n+    </>\r\n+  );\r\n+};\r\n+\r\n+export default Conversation;\r\n"
                },
                {
                    "date": 1738569819389,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,22 +1,49 @@\n-const Conversation = ({ conversation, lastIdx, emoji }) => { // Fix destructuring\r\n+import { useState } from \"react\";\r\n+\r\n+const Conversation = ({ conversation, lastIdx, emoji }) => {\r\n+  const [profilePic, setProfilePic] = useState(conversation.profilePic || \"\");\r\n+\r\n+  const handleImageUpload = (event) => {\r\n+    const file = event.target.files[0];\r\n+    if (file) {\r\n+      const reader = new FileReader();\r\n+      reader.onloadend = () => {\r\n+        setProfilePic(reader.result);  // Set the uploaded image as the new profile picture\r\n+      };\r\n+      reader.readAsDataURL(file);\r\n+    }\r\n+  };\r\n+\r\n   return (\r\n     <>\r\n       <div className=\"flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\">\r\n         {/* Avatar Section */}\r\n         <div className=\"avatar online\">\r\n           <div className=\"w-12 rounded-full\">\r\n             <img\r\n-              src={conversation.profilePic}\r\n+              src={profilePic || '/path/to/default/avatar.jpg'}  // Use uploaded profile pic or default\r\n               alt=\"user avatar\"\r\n             />\r\n           </div>\r\n         </div>\r\n \r\n+        {/* Image Upload Section */}\r\n+        <input \r\n+          type=\"file\" \r\n+          accept=\"image/*\"\r\n+          onChange={handleImageUpload}\r\n+          className=\"hidden\"  // Keep input hidden, can use a button or icon to trigger file selection\r\n+          id=\"profilePicInput\"\r\n+        />\r\n+        <label htmlFor=\"profilePicInput\" className=\"cursor-pointer text-blue-500\">\r\n+          Upload Image\r\n+        </label>\r\n+\r\n         {/* User Info Section */}\r\n         <div className=\"flex flex-col flex-1\">\r\n           <div className=\"flex gap-3 justify-between\">\r\n-            <p className=\"font-bold text-gray-200\">{conversation.fullName}</p> {/* Ensure this field exists */}\r\n+            <p className=\"font-bold text-gray-200\">{conversation.fullName}</p>\r\n             <span className=\"text-xl\">{emoji}</span>\r\n           </div>\r\n         </div>\r\n       </div>\r\n"
                },
                {
                    "date": 1738570859840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,15 +17,13 @@\n   return (\r\n     <>\r\n       <div className=\"flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\">\r\n         {/* Avatar Section */}\r\n-        <div className=\"avatar online\">\r\n-          <div className=\"w-12 rounded-full\">\r\n-            <img\r\n-              src={profilePic || '/path/to/default/avatar.jpg'}  // Use uploaded profile pic or default\r\n-              alt=\"user avatar\"\r\n-            />\r\n-          </div>\r\n+        <div className=\"w-12 h-12 rounded-full overflow-hidden\">\r\n+          <img\r\n+            src={profilePic || '/path/to/default/avatar.jpg'}  // Use uploaded profile pic or default\r\n+            alt=\"user avatar\"\r\n+          />\r\n         </div>\r\n \r\n         {/* Image Upload Section */}\r\n         <input \r\n@@ -48,9 +46,9 @@\n         </div>\r\n       </div>\r\n \r\n       {/* Divider */}\r\n-      {!lastIdx && <div className='divider my-0 py-0 h-2' />}\r\n+      {!lastIdx && <div className=\"divider my-0 py-0 h-2\" />}\r\n     </>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1738571288614,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,13 +17,15 @@\n   return (\r\n     <>\r\n       <div className=\"flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\">\r\n         {/* Avatar Section */}\r\n-        <div className=\"w-12 h-12 rounded-full overflow-hidden\">\r\n-          <img\r\n-            src={profilePic || '/path/to/default/avatar.jpg'}  // Use uploaded profile pic or default\r\n-            alt=\"user avatar\"\r\n-          />\r\n+        <div className=\"avatar online\">\r\n+          <div className=\"w-12 rounded-full\">\r\n+            <img\r\n+              src={profilePic || '/path/to/default/avatar.jpg'}  // Use uploaded profile pic or default\r\n+              alt=\"user avatar\"\r\n+            />\r\n+          </div>\r\n         </div>\r\n \r\n         {/* Image Upload Section */}\r\n         <input \r\n@@ -46,9 +48,9 @@\n         </div>\r\n       </div>\r\n \r\n       {/* Divider */}\r\n-      {!lastIdx && <div className=\"divider my-0 py-0 h-2\" />}\r\n+      {!lastIdx && <div className='divider my-0 py-0 h-2' />}\r\n     </>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1738571441371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,49 +1,22 @@\n-import { useState } from \"react\";\r\n-\r\n-const Conversation = ({ conversation, lastIdx, emoji }) => {\r\n-  const [profilePic, setProfilePic] = useState(conversation.profilePic || \"\");\r\n-\r\n-  const handleImageUpload = (event) => {\r\n-    const file = event.target.files[0];\r\n-    if (file) {\r\n-      const reader = new FileReader();\r\n-      reader.onloadend = () => {\r\n-        setProfilePic(reader.result);  // Set the uploaded image as the new profile picture\r\n-      };\r\n-      reader.readAsDataURL(file);\r\n-    }\r\n-  };\r\n-\r\n+const Conversation = ({ conversation, lastIdx, emoji }) => { // Fix destructuring\r\n   return (\r\n     <>\r\n       <div className=\"flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\">\r\n         {/* Avatar Section */}\r\n         <div className=\"avatar online\">\r\n           <div className=\"w-12 rounded-full\">\r\n             <img\r\n-              src={profilePic || '/path/to/default/avatar.jpg'}  // Use uploaded profile pic or default\r\n+              src={conversation.profilePic}\r\n               alt=\"user avatar\"\r\n             />\r\n           </div>\r\n         </div>\r\n \r\n-        {/* Image Upload Section */}\r\n-        <input \r\n-          type=\"file\" \r\n-          accept=\"image/*\"\r\n-          onChange={handleImageUpload}\r\n-          className=\"hidden\"  // Keep input hidden, can use a button or icon to trigger file selection\r\n-          id=\"profilePicInput\"\r\n-        />\r\n-        <label htmlFor=\"profilePicInput\" className=\"cursor-pointer text-blue-500\">\r\n-          Upload Image\r\n-        </label>\r\n-\r\n         {/* User Info Section */}\r\n         <div className=\"flex flex-col flex-1\">\r\n           <div className=\"flex gap-3 justify-between\">\r\n-            <p className=\"font-bold text-gray-200\">{conversation.fullName}</p>\r\n+            <p className=\"font-bold text-gray-200\">{conversation.fullName}</p> {/* Ensure this field exists */}\r\n             <span className=\"text-xl\">{emoji}</span>\r\n           </div>\r\n         </div>\r\n       </div>\r\n"
                },
                {
                    "date": 1738571591600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,22 +1,49 @@\n-const Conversation = ({ conversation, lastIdx, emoji }) => { // Fix destructuring\r\n+import { useState } from \"react\";\r\n+\r\n+const Conversation = ({ conversation, lastIdx, emoji }) => {\r\n+  const [profilePic, setProfilePic] = useState(conversation.profilePic || \"\");\r\n+\r\n+  const handleImageUpload = (event) => {\r\n+    const file = event.target.files[0];\r\n+    if (file) {\r\n+      const reader = new FileReader();\r\n+      reader.onloadend = () => {\r\n+        setProfilePic(reader.result);  // Set the uploaded image as the new profile picture\r\n+      };\r\n+      reader.readAsDataURL(file);\r\n+    }\r\n+  };\r\n+\r\n   return (\r\n     <>\r\n       <div className=\"flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\">\r\n         {/* Avatar Section */}\r\n         <div className=\"avatar online\">\r\n           <div className=\"w-12 rounded-full\">\r\n             <img\r\n-              src={conversation.profilePic}\r\n+              src={profilePic || '/path/to/default/avatar.jpg'}  // Use uploaded profile pic or default\r\n               alt=\"user avatar\"\r\n             />\r\n           </div>\r\n         </div>\r\n \r\n+        {/* Image Upload Section */}\r\n+        <input \r\n+          type=\"file\" \r\n+          accept=\"image/*\"\r\n+          onChange={handleImageUpload}\r\n+          className=\"hidden\"  // Keep input hidden, can use a button or icon to trigger file selection\r\n+          id=\"profilePicInput\"\r\n+        />\r\n+        <label htmlFor=\"profilePicInput\" className=\"cursor-pointer text-blue-500\">\r\n+          Upload Image\r\n+        </label>\r\n+\r\n         {/* User Info Section */}\r\n         <div className=\"flex flex-col flex-1\">\r\n           <div className=\"flex gap-3 justify-between\">\r\n-            <p className=\"font-bold text-gray-200\">{conversation.fullName}</p> {/* Ensure this field exists */}\r\n+            <p className=\"font-bold text-gray-200\">{conversation.fullName}</p>\r\n             <span className=\"text-xl\">{emoji}</span>\r\n           </div>\r\n         </div>\r\n       </div>\r\n"
                },
                {
                    "date": 1738571618568,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,49 +1,22 @@\n-import { useState } from \"react\";\r\n-\r\n-const Conversation = ({ conversation, lastIdx, emoji }) => {\r\n-  const [profilePic, setProfilePic] = useState(conversation.profilePic || \"\");\r\n-\r\n-  const handleImageUpload = (event) => {\r\n-    const file = event.target.files[0];\r\n-    if (file) {\r\n-      const reader = new FileReader();\r\n-      reader.onloadend = () => {\r\n-        setProfilePic(reader.result);  // Set the uploaded image as the new profile picture\r\n-      };\r\n-      reader.readAsDataURL(file);\r\n-    }\r\n-  };\r\n-\r\n+const Conversation = ({ conversation, lastIdx, emoji }) => { // Fix destructuring\r\n   return (\r\n     <>\r\n       <div className=\"flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\">\r\n         {/* Avatar Section */}\r\n         <div className=\"avatar online\">\r\n           <div className=\"w-12 rounded-full\">\r\n             <img\r\n-              src={profilePic || '/path/to/default/avatar.jpg'}  // Use uploaded profile pic or default\r\n+              src={conversation.profilePic}\r\n               alt=\"user avatar\"\r\n             />\r\n           </div>\r\n         </div>\r\n \r\n-        {/* Image Upload Section */}\r\n-        <input \r\n-          type=\"file\" \r\n-          accept=\"image/*\"\r\n-          onChange={handleImageUpload}\r\n-          className=\"hidden\"  // Keep input hidden, can use a button or icon to trigger file selection\r\n-          id=\"profilePicInput\"\r\n-        />\r\n-        <label htmlFor=\"profilePicInput\" className=\"cursor-pointer text-blue-500\">\r\n-          Upload Image\r\n-        </label>\r\n-\r\n         {/* User Info Section */}\r\n         <div className=\"flex flex-col flex-1\">\r\n           <div className=\"flex gap-3 justify-between\">\r\n-            <p className=\"font-bold text-gray-200\">{conversation.fullName}</p>\r\n+            <p className=\"font-bold text-gray-200\">{conversation.fullName}</p> {/* Ensure this field exists */}\r\n             <span className=\"text-xl\">{emoji}</span>\r\n           </div>\r\n         </div>\r\n       </div>\r\n"
                },
                {
                    "date": 1738571927929,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,29 +1,29 @@\n-const Conversation = ({ conversation, lastIdx, emoji }) => { // Fix destructuring\r\n+const Conversation = ({ conversation, lastIdx, emoji }) => {\r\n   return (\r\n     <>\r\n       <div className=\"flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\">\r\n         {/* Avatar Section */}\r\n         <div className=\"avatar online\">\r\n           <div className=\"w-12 rounded-full\">\r\n             <img\r\n-              src={conversation.profilePic}\r\n+              src={conversation.profilePic || '/path/to/default/avatar.jpg'} // Default image if profilePic is empty\r\n               alt=\"user avatar\"\r\n             />\r\n           </div>\r\n         </div>\r\n \r\n         {/* User Info Section */}\r\n         <div className=\"flex flex-col flex-1\">\r\n           <div className=\"flex gap-3 justify-between\">\r\n-            <p className=\"font-bold text-gray-200\">{conversation.fullName}</p> {/* Ensure this field exists */}\r\n+            <p className=\"font-bold text-gray-200\">{conversation.fullName}</p>\r\n             <span className=\"text-xl\">{emoji}</span>\r\n           </div>\r\n         </div>\r\n       </div>\r\n \r\n       {/* Divider */}\r\n-      {!lastIdx && <div className='divider my-0 py-0 h-2' />}\r\n+      {!lastIdx && <div className=\"divider my-0 py-0 h-2\" />}\r\n     </>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1738572393289,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,29 +1,29 @@\n-const Conversation = ({ conversation, lastIdx, emoji }) => {\r\n+const Conversation = ({ conversation, lastIdx, emoji }) => { // Fix destructuring\r\n   return (\r\n     <>\r\n       <div className=\"flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\">\r\n         {/* Avatar Section */}\r\n         <div className=\"avatar online\">\r\n           <div className=\"w-12 rounded-full\">\r\n             <img\r\n-              src={conversation.profilePic || '/path/to/default/avatar.jpg'} // Default image if profilePic is empty\r\n+              src={conversation.profilePic}\r\n               alt=\"user avatar\"\r\n             />\r\n           </div>\r\n         </div>\r\n \r\n         {/* User Info Section */}\r\n         <div className=\"flex flex-col flex-1\">\r\n           <div className=\"flex gap-3 justify-between\">\r\n-            <p className=\"font-bold text-gray-200\">{conversation.fullName}</p>\r\n+            <p className=\"font-bold text-gray-200\">{conversation.fullName}</p> {/* Ensure this field exists */}\r\n             <span className=\"text-xl\">{emoji}</span>\r\n           </div>\r\n         </div>\r\n       </div>\r\n \r\n       {/* Divider */}\r\n-      {!lastIdx && <div className=\"divider my-0 py-0 h-2\" />}\r\n+      {!lastIdx && <div className='divider my-0 py-0 h-2' />}\r\n     </>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1738573065694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,30 +1,67 @@\n-const Conversation = ({ conversation, lastIdx, emoji }) => { // Fix destructuring\r\n+import { useState } from \"react\";\r\n+\r\n+const Conversation = ({ conversation, lastIdx, emoji }) => {\r\n+  // Correctly use selectedImage and handleImageClick\r\n+  const [selectedImage, setSelectedImage] = useState(conversation.profilePic || '/path/to/default/avatar.jpg');\r\n+  \r\n+  const handleImageClick = () => {\r\n+    // Trigger the file input when the image is clicked\r\n+    document.getElementById('fileInput').click();\r\n+  };\r\n+\r\n+  const handleImageUpload = (e) => {\r\n+    const file = e.target.files[0];\r\n+    \r\n+    if (file) {\r\n+      const reader = new FileReader();\r\n+      \r\n+      reader.onloadend = () => {\r\n+        setSelectedImage(reader.result); // Update the image with the selected file\r\n+      };\r\n+      \r\n+      reader.readAsDataURL(file); // Convert the image file to a base64 string\r\n+    }\r\n+  };\r\n+\r\n   return (\r\n     <>\r\n       <div className=\"flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\">\r\n         {/* Avatar Section */}\r\n-        <div className=\"avatar online\">\r\n-          <div className=\"w-12 rounded-full\">\r\n-            <img\r\n-              src={conversation.profilePic}\r\n-              alt=\"user avatar\"\r\n-            />\r\n+        <div className=\"flex items-center gap-2\">\r\n+          {/* Avatar with Online Status */}\r\n+          <div className={`avatar ${conversation.status === 'online' ? 'online' : 'offline'}`} onClick={handleImageClick}>\r\n+            <div className=\"w-24 rounded-full\">\r\n+              <img\r\n+                src={selectedImage} // Use selectedImage here\r\n+                alt=\"user avatar\"\r\n+              />\r\n+            </div>\r\n           </div>\r\n         </div>\r\n \r\n         {/* User Info Section */}\r\n         <div className=\"flex flex-col flex-1\">\r\n           <div className=\"flex gap-3 justify-between\">\r\n-            <p className=\"font-bold text-gray-200\">{conversation.fullName}</p> {/* Ensure this field exists */}\r\n+            <p className=\"font-bold text-gray-200\">{conversation.fullName}</p>\r\n             <span className=\"text-xl\">{emoji}</span>\r\n           </div>\r\n         </div>\r\n       </div>\r\n \r\n+      {/* Hidden file input to allow image upload */}\r\n+      <input\r\n+        type=\"file\"\r\n+        id=\"fileInput\"\r\n+        style={{ display: 'none' }} // Hide the file input\r\n+        onChange={handleImageUpload}\r\n+        accept=\"image/*\" // Accept only image files\r\n+      />\r\n+\r\n       {/* Divider */}\r\n-      {!lastIdx && <div className='divider my-0 py-0 h-2' />}\r\n+      {!lastIdx && <div className=\"divider my-0 py-0 h-2\" />}\r\n     </>\r\n   );\r\n };\r\n \r\n export default Conversation;\r\n+\r\n"
                },
                {
                    "date": 1738573498454,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,17 @@\n-import { useState } from \"react\";\r\n+import { useState, useContext } from \"react\";\r\n+import { UserContext } from \"../../../context/UserContext\"; // Assuming you have a UserContext\r\n \r\n const Conversation = ({ conversation, lastIdx, emoji }) => {\r\n-  // Correctly use selectedImage and handleImageClick\r\n   const [selectedImage, setSelectedImage] = useState(conversation.profilePic || '/path/to/default/avatar.jpg');\r\n   \r\n+  const { user } = useContext(UserContext); // Assuming user is stored in context\r\n+\r\n   const handleImageClick = () => {\r\n-    // Trigger the file input when the image is clicked\r\n-    document.getElementById('fileInput').click();\r\n+    // Only allow the logged-in user to change their profile picture\r\n+    if (user.username === conversation.username) {\r\n+      document.getElementById('fileInput').click();\r\n+    }\r\n   };\r\n \r\n   const handleImageUpload = (e) => {\r\n     const file = e.target.files[0];\r\n@@ -16,8 +20,9 @@\n       const reader = new FileReader();\r\n       \r\n       reader.onloadend = () => {\r\n         setSelectedImage(reader.result); // Update the image with the selected file\r\n+        // You can also update the user's profile picture in the backend here\r\n       };\r\n       \r\n       reader.readAsDataURL(file); // Convert the image file to a base64 string\r\n     }\r\n@@ -28,9 +33,12 @@\n       <div className=\"flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\">\r\n         {/* Avatar Section */}\r\n         <div className=\"flex items-center gap-2\">\r\n           {/* Avatar with Online Status */}\r\n-          <div className={`avatar ${conversation.status === 'online' ? 'online' : 'offline'}`} onClick={handleImageClick}>\r\n+          <div \r\n+            className={`avatar ${conversation.status === 'online' ? 'online' : 'offline'}`} \r\n+            onClick={handleImageClick}\r\n+          >\r\n             <div className=\"w-24 rounded-full\">\r\n               <img\r\n                 src={selectedImage} // Use selectedImage here\r\n                 alt=\"user avatar\"\r\n@@ -63,5 +71,4 @@\n   );\r\n };\r\n \r\n export default Conversation;\r\n-\r\n"
                },
                {
                    "date": 1738574030525,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,13 @@\n-import { useState, useContext } from \"react\";\r\n-import { UserContext } from \"../../../context/UserContext\"; // Assuming you have a UserContext\r\n+import { useState } from \"react\";\r\n \r\n const Conversation = ({ conversation, lastIdx, emoji }) => {\r\n   const [selectedImage, setSelectedImage] = useState(conversation.profilePic || '/path/to/default/avatar.jpg');\r\n   \r\n-  const { user } = useContext(UserContext); // Assuming user is stored in context\r\n \r\n+\r\n   const handleImageClick = () => {\r\n     // Only allow the logged-in user to change their profile picture\r\n-    if (user.username === conversation.username) {\r\n-      document.getElementById('fileInput').click();\r\n-    }\r\n   };\r\n \r\n   const handleImageUpload = (e) => {\r\n     const file = e.target.files[0];\r\n"
                },
                {
                    "date": 1738574298884,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,10 @@\n import { useState } from \"react\";\r\n+// import { UserContext } from \"../../../context/UserContext\"; // Remove or comment this line\r\n \r\n const Conversation = ({ conversation, lastIdx, emoji }) => {\r\n   const [selectedImage, setSelectedImage] = useState(conversation.profilePic || '/path/to/default/avatar.jpg');\r\n   \r\n-\r\n-\r\n   const handleImageClick = () => {\r\n     // Only allow the logged-in user to change their profile picture\r\n   };\r\n \r\n"
                },
                {
                    "date": 1738574499384,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,10 +1,11 @@\n import { useState } from \"react\";\r\n-// import { UserContext } from \"../../../context/UserContext\"; // Remove or comment this line\r\n \r\n const Conversation = ({ conversation, lastIdx, emoji }) => {\r\n   const [selectedImage, setSelectedImage] = useState(conversation.profilePic || '/path/to/default/avatar.jpg');\r\n   \r\n+\r\n+\r\n   const handleImageClick = () => {\r\n     // Only allow the logged-in user to change their profile picture\r\n   };\r\n \r\n"
                },
                {
                    "date": 1738574629169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,17 @@\n-import { useState } from \"react\";\r\n+import { useState, useContext } from \"react\";\r\n+import { UserContext } from \"../../../context/UserContext\"; // Assuming you have a UserContext\r\n \r\n const Conversation = ({ conversation, lastIdx, emoji }) => {\r\n   const [selectedImage, setSelectedImage] = useState(conversation.profilePic || '/path/to/default/avatar.jpg');\r\n   \r\n+  const { user } = useContext(UserContext); // Assuming user is stored in context\r\n \r\n-\r\n   const handleImageClick = () => {\r\n     // Only allow the logged-in user to change their profile picture\r\n+    if (user.username === conversation.username) {\r\n+      document.getElementById('fileInput').click();\r\n+    }\r\n   };\r\n \r\n   const handleImageUpload = (e) => {\r\n     const file = e.target.files[0];\r\n"
                },
                {
                    "date": 1738574696879,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,13 @@\n-import { useState, useContext } from \"react\";\r\n-import { UserContext } from \"../../../context/UserContext\"; // Assuming you have a UserContext\r\n+import { useState } from \"react\";\r\n \r\n const Conversation = ({ conversation, lastIdx, emoji }) => {\r\n+  // Correctly use selectedImage and handleImageClick\r\n   const [selectedImage, setSelectedImage] = useState(conversation.profilePic || '/path/to/default/avatar.jpg');\r\n   \r\n-  const { user } = useContext(UserContext); // Assuming user is stored in context\r\n-\r\n   const handleImageClick = () => {\r\n-    // Only allow the logged-in user to change their profile picture\r\n-    if (user.username === conversation.username) {\r\n-      document.getElementById('fileInput').click();\r\n-    }\r\n+    // Trigger the file input when the image is clicked\r\n+    document.getElementById('fileInput').click();\r\n   };\r\n \r\n   const handleImageUpload = (e) => {\r\n     const file = e.target.files[0];\r\n@@ -20,9 +16,8 @@\n       const reader = new FileReader();\r\n       \r\n       reader.onloadend = () => {\r\n         setSelectedImage(reader.result); // Update the image with the selected file\r\n-        // You can also update the user's profile picture in the backend here\r\n       };\r\n       \r\n       reader.readAsDataURL(file); // Convert the image file to a base64 string\r\n     }\r\n@@ -33,12 +28,9 @@\n       <div className=\"flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\">\r\n         {/* Avatar Section */}\r\n         <div className=\"flex items-center gap-2\">\r\n           {/* Avatar with Online Status */}\r\n-          <div \r\n-            className={`avatar ${conversation.status === 'online' ? 'online' : 'offline'}`} \r\n-            onClick={handleImageClick}\r\n-          >\r\n+          <div className={`avatar ${conversation.status === 'online' ? 'online' : 'offline'}`} onClick={handleImageClick}>\r\n             <div className=\"w-24 rounded-full\">\r\n               <img\r\n                 src={selectedImage} // Use selectedImage here\r\n                 alt=\"user avatar\"\r\n@@ -71,4 +63,5 @@\n   );\r\n };\r\n \r\n export default Conversation;\r\n+\r\n"
                },
                {
                    "date": 1738575930146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -32,9 +32,9 @@\n           <div className={`avatar ${conversation.status === 'online' ? 'online' : 'offline'}`} onClick={handleImageClick}>\r\n             <div className=\"w-24 rounded-full\">\r\n               <img\r\n                 src={selectedImage} // Use selectedImage here\r\n-                alt=\"user avatar\"\r\n+                alt=\"user\"\r\n               />\r\n             </div>\r\n           </div>\r\n         </div>\r\n"
                },
                {
                    "date": 1738579014706,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,67 +1,24 @@\n-import { useState } from \"react\";\r\n-\r\n const Conversation = ({ conversation, lastIdx, emoji }) => {\r\n-  // Correctly use selectedImage and handleImageClick\r\n-  const [selectedImage, setSelectedImage] = useState(conversation.profilePic || '/path/to/default/avatar.jpg');\r\n-  \r\n-  const handleImageClick = () => {\r\n-    // Trigger the file input when the image is clicked\r\n-    document.getElementById('fileInput').click();\r\n-  };\r\n-\r\n-  const handleImageUpload = (e) => {\r\n-    const file = e.target.files[0];\r\n-    \r\n-    if (file) {\r\n-      const reader = new FileReader();\r\n-      \r\n-      reader.onloadend = () => {\r\n-        setSelectedImage(reader.result); // Update the image with the selected file\r\n-      };\r\n-      \r\n-      reader.readAsDataURL(file); // Convert the image file to a base64 string\r\n-    }\r\n-  };\r\n-\r\n   return (\r\n     <>\r\n-      <div className=\"flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\">\r\n-        {/* Avatar Section */}\r\n-        <div className=\"flex items-center gap-2\">\r\n-          {/* Avatar with Online Status */}\r\n-          <div className={`avatar ${conversation.status === 'online' ? 'online' : 'offline'}`} onClick={handleImageClick}>\r\n-            <div className=\"w-24 rounded-full\">\r\n-              <img\r\n-                src={selectedImage} // Use selectedImage here\r\n-                alt=\"user\"\r\n-              />\r\n-            </div>\r\n+      <div className='flex gap-2 items-center hover:bg-red-700 rounded p-2 py-1 cursor-pointer'>\r\n+        <div className='avatar online'>\r\n+          <div className='w-12 rounded-full'>\r\n+            <img src={conversation.profilePic} alt='user avatar'/>\r\n           </div>\r\n         </div>\r\n+      </div>\r\n \r\n-        {/* User Info Section */}\r\n-        <div className=\"flex flex-col flex-1\">\r\n-          <div className=\"flex gap-3 justify-between\">\r\n-            <p className=\"font-bold text-gray-200\">{conversation.fullName}</p>\r\n-            <span className=\"text-xl\">{emoji}</span>\r\n-          </div>\r\n+      <div className='flex flex-col flex-1'>\r\n+        <div className='flex gap-3 justify-between'>\r\n+          <p className='font-bold text-gray-200'>{conversation.name}</p>\r\n+          <span className='text-xl'>{emoji}</span>\r\n         </div>\r\n       </div>\r\n \r\n-      {/* Hidden file input to allow image upload */}\r\n-      <input\r\n-        type=\"file\"\r\n-        id=\"fileInput\"\r\n-        style={{ display: 'none' }} // Hide the file input\r\n-        onChange={handleImageUpload}\r\n-        accept=\"image/*\" // Accept only image files\r\n-      />\r\n-\r\n-      {/* Divider */}\r\n-      {!lastIdx && <div className=\"divider my-0 py-0 h-2\" />}\r\n+      {!lastIdx && <div className='divider my-0 py-0 h-1'/>}\r\n     </>\r\n   );\r\n };\r\n \r\n-export default Conversation;\r\n-\r\n+export default Conversation;\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738579243698,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,24 +1,31 @@\n-const Conversation = ({ conversation, lastIdx, emoji }) => {\r\n-  return (\r\n-    <>\r\n-      <div className='flex gap-2 items-center hover:bg-red-700 rounded p-2 py-1 cursor-pointer'>\r\n-        <div className='avatar online'>\r\n-          <div className='w-12 rounded-full'>\r\n-            <img src={conversation.profilePic} alt='user avatar'/>\r\n+const Conversation = () => {\r\n+    return (\r\n+      <>\r\n+        <div className=\"flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\">\r\n+          {/* Avatar Section */}\r\n+          <div className=\"avatar online\">\r\n+            <div className=\"w-12 rounded-full\">\r\n+              <img\r\n+                src=\"https://cdn0.iconfinder.com/data/icons/communication-line-10/24/account_profile_user_contact_person_avatar_placeholder-512.png\"\r\n+                alt=\"user avatar\"\r\n+              />\r\n+            </div>\r\n           </div>\r\n+  \r\n+          {/* User Info Section */}\r\n+          <div className=\"flex flex-col flex-1\">\r\n+            <div className=\"flex gap-3 justify-between\">\r\n\\ No newline at end of file\n+              <p className=\"font-bold text-gray-200\">Ben</p>\r\n+              <span className=\"text-xl\">👤</span>\r\n+            </div>\r\n+          </div>\r\n         </div>\r\n-      </div>\r\n-\r\n-      <div className='flex flex-col flex-1'>\r\n-        <div className='flex gap-3 justify-between'>\r\n-          <p className='font-bold text-gray-200'>{conversation.name}</p>\r\n-          <span className='text-xl'>{emoji}</span>\r\n-        </div>\r\n-      </div>\r\n-\r\n-      {!lastIdx && <div className='divider my-0 py-0 h-1'/>}\r\n-    </>\r\n-  );\r\n-};\r\n-\r\n-export default Conversation;\n+  \r\n+        {/* Divider */}\r\n+        <div className=\"divider my-0 py-0 h-2\" />\r\n+      </>\r\n+    );\r\n+  };\r\n+  \r\n+  export default Conversation;\r\n+  \n\\ No newline at end of file\n"
                },
                {
                    "date": 1738579350648,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,31 +1,30 @@\n-const Conversation = () => {\r\n-    return (\r\n-      <>\r\n-        <div className=\"flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\">\r\n-          {/* Avatar Section */}\r\n-          <div className=\"avatar online\">\r\n-            <div className=\"w-12 rounded-full\">\r\n-              <img\r\n-                src=\"https://cdn0.iconfinder.com/data/icons/communication-line-10/24/account_profile_user_contact_person_avatar_placeholder-512.png\"\r\n-                alt=\"user avatar\"\r\n-              />\r\n-            </div>\r\n+const Conversation = ({ conversation, lastIdx, emoji }) => { // Fix destructuring\r\n+  return (\r\n+    <>\r\n+      <div className=\"flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\">\r\n+        {/* Avatar Section */}\r\n+        <div className=\"avatar online\">\r\n+          <div className=\"w-12 rounded-full\">\r\n+            <img\r\n+              src={conversation.profilePic}\r\n+              alt=\"user avatar\"\r\n+            />\r\n           </div>\r\n-  \r\n-          {/* User Info Section */}\r\n-          <div className=\"flex flex-col flex-1\">\r\n-            <div className=\"flex gap-3 justify-between\">\r\n-              <p className=\"font-bold text-gray-200\">Ben</p>\r\n-              <span className=\"text-xl\">👤</span>\r\n-            </div>\r\n\\ No newline at end of file\n+        </div>\r\n+\r\n+        {/* User Info Section */}\r\n+        <div className=\"flex flex-col flex-1\">\r\n+          <div className=\"flex gap-3 justify-between\">\r\n+            <p className=\"font-bold text-gray-200\">{conversation.fullName}</p> {/* Ensure this field exists */}\r\n+            <span className=\"text-xl\">{emoji}</span>\r\n           </div>\r\n         </div>\r\n-  \r\n-        {/* Divider */}\r\n-        <div className=\"divider my-0 py-0 h-2\" />\r\n-      </>\r\n-    );\r\n-  };\r\n-  \r\n-  export default Conversation;\r\n-  \n+      </div>\r\n+\r\n+      {/* Divider */}\r\n+      {!lastIdx && <div className='divider my-0 py-0 h-2' />}\r\n+    </>\r\n+  );\r\n+};\r\n+\r\n+export default Conversation;\r\n"
                },
                {
                    "date": 1738579357227,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,5 +1,5 @@\n-const Conversation = ({ conversation, lastIdx, emoji }) => { // Fix destructuring\r\n+const Conversation = ({ conversation, lastIdx, emoji }) => { \r\n   return (\r\n     <>\r\n       <div className=\"flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\">\r\n         {/* Avatar Section */}\r\n"
                },
                {
                    "date": 1738580262689,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,22 +1,22 @@\n-const Conversation = ({ conversation, lastIdx, emoji }) => { \r\n+const Conversation = ({ conversation, lastIdx, emoji }) => {\r\n   return (\r\n     <>\r\n       <div className=\"flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\">\r\n         {/* Avatar Section */}\r\n         <div className=\"avatar online\">\r\n-          <div className=\"w-12 rounded-full\">\r\n+          <div className=\"w-12 h-12 rounded-full bg-gray-500\">\r\n             <img\r\n-              src={conversation.profilePic}\r\n+              src={conversation.profilePic || \"path/to/default-avatar.png\"} // Default avatar\r\n               alt=\"user avatar\"\r\n             />\r\n           </div>\r\n         </div>\r\n \r\n         {/* User Info Section */}\r\n         <div className=\"flex flex-col flex-1\">\r\n           <div className=\"flex gap-3 justify-between\">\r\n-            <p className=\"font-bold text-gray-200\">{conversation.fullName}</p> {/* Ensure this field exists */}\r\n+            <p className=\"font-bold text-gray-200\">{conversation.fullName}</p>\r\n             <span className=\"text-xl\">{emoji}</span>\r\n           </div>\r\n         </div>\r\n       </div>\r\n"
                },
                {
                    "date": 1738580901530,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,15 @@\n const Conversation = ({ conversation, lastIdx, emoji }) => {\r\n+  const defaultAvatar = \"https://cdn0.iconfinder.com/data/icons/communication-line-10/24/account_profile_user_contact_person_avatar_placeholder-512.png\";\r\n+\r\n   return (\r\n     <>\r\n       <div className=\"flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\">\r\n         {/* Avatar Section */}\r\n         <div className=\"avatar online\">\r\n           <div className=\"w-12 h-12 rounded-full bg-gray-500\">\r\n             <img\r\n-              src={conversation.profilePic || \"path/to/default-avatar.png\"} // Default avatar\r\n+              src={conversation.profilePic || defaultAvatar} // Use the default avatar image\r\n               alt=\"user avatar\"\r\n             />\r\n           </div>\r\n         </div>\r\n"
                },
                {
                    "date": 1738581139544,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,15 +1,14 @@\n const Conversation = ({ conversation, lastIdx, emoji }) => {\r\n-  const defaultAvatar = \"https://cdn0.iconfinder.com/data/icons/communication-line-10/24/account_profile_user_contact_person_avatar_placeholder-512.png\";\r\n-\r\n+  \r\n   return (\r\n     <>\r\n       <div className=\"flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\">\r\n         {/* Avatar Section */}\r\n         <div className=\"avatar online\">\r\n           <div className=\"w-12 h-12 rounded-full bg-gray-500\">\r\n             <img\r\n-              src={conversation.profilePic || defaultAvatar} // Use the default avatar image\r\n+              src={conversation.profilePic} \r\n               alt=\"user avatar\"\r\n             />\r\n           </div>\r\n         </div>\r\n"
                },
                {
                    "date": 1738581849267,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,17 @@\n+import useGetConversation from '../../../hooks/useGetConversations'\r\n+\r\n const Conversation = ({ conversation, lastIdx, emoji }) => {\r\n   \r\n+const {selectedConversation , setSelectedConversation } = useGetConversation.getState();\r\n+\r\n+const isSelected = selectedConversation?._id === conversation._id;\r\n   return (\r\n     <>\r\n-      <div className=\"flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\">\r\n+      <div className={`flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\r\n+        ${isSelected ? 'bg-red-700': ''}\r\n+        `}>\r\n+          onClick={() => setSelectedConversation(conversation)}\r\n         {/* Avatar Section */}\r\n         <div className=\"avatar online\">\r\n           <div className=\"w-12 h-12 rounded-full bg-gray-500\">\r\n             <img\r\n"
                },
                {
                    "date": 1738581938299,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,9 +1,9 @@\n import useGetConversation from '../../../hooks/useGetConversations'\r\n \r\n const Conversation = ({ conversation, lastIdx, emoji }) => {\r\n   \r\n-const {selectedConversation , setSelectedConversation } = useGetConversation.getState();\r\n+const {selectedConversation , setSelectedConversation } = useGetConversation();\r\n \r\n const isSelected = selectedConversation?._id === conversation._id;\r\n   return (\r\n     <>\r\n"
                },
                {
                    "date": 1738582722008,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,10 +8,11 @@\n   return (\r\n     <>\r\n       <div className={`flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\r\n         ${isSelected ? 'bg-red-700': ''}\r\n-        `}>\r\n-          onClick={() => setSelectedConversation(conversation)}\r\n+        `}\r\n+         onClick={() => setSelectedConversation(conversation)}\r\n+        >\r\n         {/* Avatar Section */}\r\n         <div className=\"avatar online\">\r\n           <div className=\"w-12 h-12 rounded-full bg-gray-500\">\r\n             <img\r\n"
                },
                {
                    "date": 1738583087399,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,25 +1,23 @@\n-import useGetConversation from '../../../hooks/useGetConversations'\r\n+import useConversation from '../../zustand/useConversation'; // Fixed unterminated string\r\n \r\n const Conversation = ({ conversation, lastIdx, emoji }) => {\r\n-  \r\n-const {selectedConversation , setSelectedConversation } = useGetConversation();\r\n+  const { selectedConversation, setSelectedConversation } = useConversation(); // Fixed incorrect hook\r\n \r\n-const isSelected = selectedConversation?._id === conversation._id;\r\n+  const isSelected = selectedConversation?._id === conversation._id;\r\n+\r\n   return (\r\n     <>\r\n-      <div className={`flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\r\n-        ${isSelected ? 'bg-red-700': ''}\r\n+      <div\r\n+        className={`flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\r\n+          ${isSelected ? 'bg-red-700' : ''}\r\n         `}\r\n-         onClick={() => setSelectedConversation(conversation)}\r\n-        >\r\n+        onClick={() => setSelectedConversation(conversation)}\r\n+      >\r\n         {/* Avatar Section */}\r\n         <div className=\"avatar online\">\r\n           <div className=\"w-12 h-12 rounded-full bg-gray-500\">\r\n-            <img\r\n-              src={conversation.profilePic} \r\n-              alt=\"user avatar\"\r\n-            />\r\n+            <img src={conversation.profilePic} alt=\"user avatar\" />\r\n           </div>\r\n         </div>\r\n \r\n         {/* User Info Section */}\r\n@@ -31,9 +29,9 @@\n         </div>\r\n       </div>\r\n \r\n       {/* Divider */}\r\n-      {!lastIdx && <div className='divider my-0 py-0 h-2' />}\r\n+      {!lastIdx && <div className=\"divider my-0 py-0 h-2\" />}\r\n     </>\r\n   );\r\n };\r\n \r\n"
                },
                {
                    "date": 1738584743371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,8 @@\n import useConversation from '../../zustand/useConversation'; // Fixed unterminated string\r\n \r\n+const defaultAvatar = \"https://cdn0.iconfinder.com/data/icons/communication-line-10/24/account_profile_user_contact_person_avatar_placeholder-512.png\";\r\n+\r\n const Conversation = ({ conversation, lastIdx, emoji }) => {\r\n   const { selectedConversation, setSelectedConversation } = useConversation(); // Fixed incorrect hook\r\n \r\n   const isSelected = selectedConversation?._id === conversation._id;\r\n@@ -15,9 +17,9 @@\n       >\r\n         {/* Avatar Section */}\r\n         <div className=\"avatar online\">\r\n           <div className=\"w-12 h-12 rounded-full bg-gray-500\">\r\n-            <img src={conversation.profilePic} alt=\"user avatar\" />\r\n+            <img src={conversation.profilePic || defaultAvatar} alt=\"user avatar\" />\r\n           </div>\r\n         </div>\r\n \r\n         {/* User Info Section */}\r\n"
                },
                {
                    "date": 1738584909718,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,13 +1,19 @@\n import useConversation from '../../zustand/useConversation'; // Fixed unterminated string\r\n \r\n-const defaultAvatar = \"https://cdn0.iconfinder.com/data/icons/communication-line-10/24/account_profile_user_contact_person_avatar_placeholder-512.png\";\r\n+const boyAvatar = \"https://cdn-icons-png.flaticon.com/512/2922/2922510.png\"; // Boy avatar\r\n+const girlAvatar = \"https://cdn-icons-png.flaticon.com/512/2922/2922561.png\"; // Girl avatar\r\n+const defaultAvatar = \"https://cdn0.iconfinder.com/data/icons/communication-line-10/24/account_profile_user_contact_person_avatar_placeholder-512.png\"; // Generic default\r\n \r\n const Conversation = ({ conversation, lastIdx, emoji }) => {\r\n   const { selectedConversation, setSelectedConversation } = useConversation(); // Fixed incorrect hook\r\n \r\n   const isSelected = selectedConversation?._id === conversation._id;\r\n \r\n+  // Determine which avatar to use\r\n+  const avatar = conversation.profilePic || \r\n+    (conversation.gender === \"male\" ? boyAvatar : conversation.gender === \"female\" ? girlAvatar : defaultAvatar);\r\n+\r\n   return (\r\n     <>\r\n       <div\r\n         className={`flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\r\n@@ -17,9 +23,9 @@\n       >\r\n         {/* Avatar Section */}\r\n         <div className=\"avatar online\">\r\n           <div className=\"w-12 h-12 rounded-full bg-gray-500\">\r\n-            <img src={conversation.profilePic || defaultAvatar} alt=\"user avatar\" />\r\n+            <img src={avatar} alt=\"user avatar\" />\r\n           </div>\r\n         </div>\r\n \r\n         {/* User Info Section */}\r\n"
                },
                {
                    "date": 1738585112023,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +1,25 @@\n-import useConversation from '../../zustand/useConversation'; // Fixed unterminated string\r\n+import useConversation from '../../zustand/useConversation';\r\n \r\n-const boyAvatar = \"https://cdn-icons-png.flaticon.com/512/2922/2922510.png\"; // Boy avatar\r\n-const girlAvatar = \"https://cdn-icons-png.flaticon.com/512/2922/2922561.png\"; // Girl avatar\r\n-const defaultAvatar = \"https://cdn0.iconfinder.com/data/icons/communication-line-10/24/account_profile_user_contact_person_avatar_placeholder-512.png\"; // Generic default\r\n+const defaultAvatar = \"https://api.dicebear.com/7.x/adventurer/svg?seed=default\";\r\n \r\n+const getAvatar = (conversation) => {\r\n+  if (conversation.profilePic) {\r\n+    return conversation.profilePic;\r\n+  }\r\n+\r\n+  return conversation.gender === \"male\"\r\n+    ? `https://api.dicebear.com/7.x/adventurer/svg?seed=boy${Math.floor(Math.random() * 10)}`\r\n+    : conversation.gender === \"female\"\r\n+    ? `https://api.dicebear.com/7.x/adventurer/svg?seed=girl${Math.floor(Math.random() * 10)}`\r\n+    : defaultAvatar;\r\n+};\r\n+\r\n const Conversation = ({ conversation, lastIdx, emoji }) => {\r\n-  const { selectedConversation, setSelectedConversation } = useConversation(); // Fixed incorrect hook\r\n-\r\n+  const { selectedConversation, setSelectedConversation } = useConversation();\r\n   const isSelected = selectedConversation?._id === conversation._id;\r\n+  const avatar = getAvatar(conversation);\r\n \r\n-  // Determine which avatar to use\r\n-  const avatar = conversation.profilePic || \r\n-    (conversation.gender === \"male\" ? boyAvatar : conversation.gender === \"female\" ? girlAvatar : defaultAvatar);\r\n-\r\n   return (\r\n     <>\r\n       <div\r\n         className={`flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\r\n"
                },
                {
                    "date": 1738585285365,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,17 @@\n import useConversation from '../../zustand/useConversation';\r\n \r\n-const defaultAvatar = \"https://api.dicebear.com/7.x/adventurer/svg?seed=default\";\r\n+const defaultAvatar = \"https://api.dicebear.com/7.x/avataaars/svg?seed=default&backgroundColor=000000&accessoriesColor=4b0082\";\r\n \r\n const getAvatar = (conversation) => {\r\n   if (conversation.profilePic) {\r\n     return conversation.profilePic;\r\n   }\r\n \r\n   return conversation.gender === \"male\"\r\n-    ? `https://api.dicebear.com/7.x/adventurer/svg?seed=boy${Math.floor(Math.random() * 10)}`\r\n+    ? `https://api.dicebear.com/7.x/avataaars/svg?seed=GothBoy${Math.floor(Math.random() * 10)}&backgroundColor=000000&clothesColor=4b0082&hairColor=2c2c2c`\r\n     : conversation.gender === \"female\"\r\n-    ? `https://api.dicebear.com/7.x/adventurer/svg?seed=girl${Math.floor(Math.random() * 10)}`\r\n+    ? `https://api.dicebear.com/7.x/avataaars/svg?seed=GothGirl${Math.floor(Math.random() * 10)}&backgroundColor=000000&clothesColor=4b0082&hairColor=2c2c2c`\r\n     : defaultAvatar;\r\n };\r\n \r\n const Conversation = ({ conversation, lastIdx, emoji }) => {\r\n"
                },
                {
                    "date": 1738585364557,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,11 +7,11 @@\n     return conversation.profilePic;\r\n   }\r\n \r\n   return conversation.gender === \"male\"\r\n-    ? `https://api.dicebear.com/7.x/avataaars/svg?seed=GothBoy${Math.floor(Math.random() * 10)}&backgroundColor=000000&clothesColor=4b0082&hairColor=2c2c2c`\r\n+    ? `https://api.dicebear.com/7.x/avataaars/svg?seed=GothMan${Math.floor(Math.random() * 10)}&backgroundColor=000000&clothesColor=4b0082&hairColor=2c2c2c&eyes=heart&eyebrows=angry&mouth=smile`\r\n     : conversation.gender === \"female\"\r\n-    ? `https://api.dicebear.com/7.x/avataaars/svg?seed=GothGirl${Math.floor(Math.random() * 10)}&backgroundColor=000000&clothesColor=4b0082&hairColor=2c2c2c`\r\n+    ? `https://api.dicebear.com/7.x/avataaars/svg?seed=GothWoman${Math.floor(Math.random() * 10)}&backgroundColor=000000&clothesColor=4b0082&hairColor=2c2c2c&eyes=wide&eyebrows=raised&mouth=sad`\r\n     : defaultAvatar;\r\n };\r\n \r\n const Conversation = ({ conversation, lastIdx, emoji }) => {\r\n"
                },
                {
                    "date": 1738585450383,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,17 +1,18 @@\n import useConversation from '../../zustand/useConversation';\r\n \r\n-const defaultAvatar = \"https://api.dicebear.com/7.x/avataaars/svg?seed=default&backgroundColor=000000&accessoriesColor=4b0082\";\r\n+const defaultAvatar =\r\n+  \"https://cdn.pixabay.com/photo/2021/09/04/05/24/portrait-6593229_960_720.jpg\"; // Default Image\r\n \r\n const getAvatar = (conversation) => {\r\n   if (conversation.profilePic) {\r\n     return conversation.profilePic;\r\n   }\r\n \r\n   return conversation.gender === \"male\"\r\n-    ? `https://api.dicebear.com/7.x/avataaars/svg?seed=GothMan${Math.floor(Math.random() * 10)}&backgroundColor=000000&clothesColor=4b0082&hairColor=2c2c2c&eyes=heart&eyebrows=angry&mouth=smile`\r\n+    ? `https://robohash.org/${Math.floor(Math.random() * 10000)}?set=set1&bgset=bg2`\r\n     : conversation.gender === \"female\"\r\n-    ? `https://api.dicebear.com/7.x/avataaars/svg?seed=GothWoman${Math.floor(Math.random() * 10)}&backgroundColor=000000&clothesColor=4b0082&hairColor=2c2c2c&eyes=wide&eyebrows=raised&mouth=sad`\r\n+    ? `https://robohash.org/${Math.floor(Math.random() * 10000)}?set=set2&bgset=bg2`\r\n     : defaultAvatar;\r\n };\r\n \r\n const Conversation = ({ conversation, lastIdx, emoji }) => {\r\n"
                },
                {
                    "date": 1738588314696,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,9 @@\n         {/* User Info Section */}\r\n         <div className=\"flex flex-col flex-1\">\r\n           <div className=\"flex gap-3 justify-between\">\r\n             <p className=\"font-bold text-gray-200\">{conversation.fullName}</p>\r\n-            <span className=\"text-xl\">{emoji}</span>\r\n+            <span className=\"text-xl\">{emoji}</span> {/* Keep the emoji */}\r\n           </div>\r\n         </div>\r\n       </div>\r\n \r\n"
                },
                {
                    "date": 1738837285744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,18 +14,19 @@\n     ? `https://robohash.org/${Math.floor(Math.random() * 10000)}?set=set2&bgset=bg2`\r\n     : defaultAvatar;\r\n };\r\n \r\n-const Conversation = ({ conversation, lastIdx, emoji }) => {\r\n+const Conversation = ({ conversation, lastIdx, emoji, isSender }) => {  // isSender passed as prop\r\n   const { selectedConversation, setSelectedConversation } = useConversation();\r\n   const isSelected = selectedConversation?._id === conversation._id;\r\n   const avatar = getAvatar(conversation);\r\n \r\n   return (\r\n     <>\r\n       <div\r\n         className={`flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\r\n-          ${isSelected ? 'bg-red-700' : ''}\r\n+          ${isSelected ? 'bg-red-700' : ''} \r\n+          ${isSender ? 'justify-end text-red-600' : 'justify-start text-gray-400'}  // Sender message color\r\n         `}\r\n         onClick={() => setSelectedConversation(conversation)}\r\n       >\r\n         {/* Avatar Section */}\r\n@@ -38,9 +39,9 @@\n         {/* User Info Section */}\r\n         <div className=\"flex flex-col flex-1\">\r\n           <div className=\"flex gap-3 justify-between\">\r\n             <p className=\"font-bold text-gray-200\">{conversation.fullName}</p>\r\n-            <span className=\"text-xl\">{emoji}</span> {/* Keep the emoji */}\r\n+            <span className=\"text-xl\">{emoji}</span>\r\n           </div>\r\n         </div>\r\n       </div>\r\n \r\n"
                },
                {
                    "date": 1738842192352,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n     ? `https://robohash.org/${Math.floor(Math.random() * 10000)}?set=set2&bgset=bg2`\r\n     : defaultAvatar;\r\n };\r\n \r\n-const Conversation = ({ conversation, lastIdx, emoji, isSender }) => {  // isSender passed as prop\r\n+const Conversation = ({ conversation, lastIdx, emoji, isSender }) => {  \r\n   const { selectedConversation, setSelectedConversation } = useConversation();\r\n   const isSelected = selectedConversation?._id === conversation._id;\r\n   const avatar = getAvatar(conversation);\r\n \r\n@@ -24,16 +24,16 @@\n     <>\r\n       <div\r\n         className={`flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\r\n           ${isSelected ? 'bg-red-700' : ''} \r\n-          ${isSender ? 'justify-end text-red-600' : 'justify-start text-gray-400'}  // Sender message color\r\n+          ${isSender ? 'justify-end text-red-600' : 'justify-start text-gray-400'}\r\n         `}\r\n         onClick={() => setSelectedConversation(conversation)}\r\n       >\r\n         {/* Avatar Section */}\r\n         <div className=\"avatar online\">\r\n           <div className=\"w-12 h-12 rounded-full bg-gray-500\">\r\n-            <img src={avatar} alt=\"user avatar\" />\r\n+            <img src={avatar} alt={`${conversation.fullName}'s avatar`} className=\"w-full h-full object-cover\" />\r\n           </div>\r\n         </div>\r\n \r\n         {/* User Info Section */}\r\n"
                },
                {
                    "date": 1738844024984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -28,25 +28,20 @@\n           ${isSender ? 'justify-end text-red-600' : 'justify-start text-gray-400'}\r\n         `}\r\n         onClick={() => setSelectedConversation(conversation)}\r\n       >\r\n-        {/* Avatar Section */}\r\n         <div className=\"avatar online\">\r\n           <div className=\"w-12 h-12 rounded-full bg-gray-500\">\r\n             <img src={avatar} alt={`${conversation.fullName}'s avatar`} className=\"w-full h-full object-cover\" />\r\n           </div>\r\n         </div>\r\n-\r\n-        {/* User Info Section */}\r\n         <div className=\"flex flex-col flex-1\">\r\n           <div className=\"flex gap-3 justify-between\">\r\n             <p className=\"font-bold text-gray-200\">{conversation.fullName}</p>\r\n             <span className=\"text-xl\">{emoji}</span>\r\n           </div>\r\n         </div>\r\n       </div>\r\n-\r\n-      {/* Divider */}\r\n       {!lastIdx && <div className=\"divider my-0 py-0 h-2\" />}\r\n     </>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1738844760385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,19 +1,14 @@\n import useConversation from '../../zustand/useConversation';\r\n \r\n-const defaultAvatar =\r\n-  \"https://cdn.pixabay.com/photo/2021/09/04/05/24/portrait-6593229_960_720.jpg\"; // Default Image\r\n-\r\n const getAvatar = (conversation) => {\r\n   if (conversation.profilePic) {\r\n     return conversation.profilePic;\r\n   }\r\n \r\n   return conversation.gender === \"male\"\r\n     ? `https://robohash.org/${Math.floor(Math.random() * 10000)}?set=set1&bgset=bg2`\r\n-    : conversation.gender === \"female\"\r\n-    ? `https://robohash.org/${Math.floor(Math.random() * 10000)}?set=set2&bgset=bg2`\r\n-    : defaultAvatar;\r\n+    : `https://robohash.org/${Math.floor(Math.random() * 10000)}?set=set2&bgset=bg2`;\r\n };\r\n \r\n const Conversation = ({ conversation, lastIdx, emoji, isSender }) => {  \r\n   const { selectedConversation, setSelectedConversation } = useConversation();\r\n@@ -28,20 +23,25 @@\n           ${isSender ? 'justify-end text-red-600' : 'justify-start text-gray-400'}\r\n         `}\r\n         onClick={() => setSelectedConversation(conversation)}\r\n       >\r\n+        {/* Avatar Section */}\r\n         <div className=\"avatar online\">\r\n           <div className=\"w-12 h-12 rounded-full bg-gray-500\">\r\n             <img src={avatar} alt={`${conversation.fullName}'s avatar`} className=\"w-full h-full object-cover\" />\r\n           </div>\r\n         </div>\r\n+\r\n+        {/* User Info Section */}\r\n         <div className=\"flex flex-col flex-1\">\r\n           <div className=\"flex gap-3 justify-between\">\r\n             <p className=\"font-bold text-gray-200\">{conversation.fullName}</p>\r\n             <span className=\"text-xl\">{emoji}</span>\r\n           </div>\r\n         </div>\r\n       </div>\r\n+\r\n+      {/* Divider */}\r\n       {!lastIdx && <div className=\"divider my-0 py-0 h-2\" />}\r\n     </>\r\n   );\r\n };\r\n"
                },
                {
                    "date": 1738845243420,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,11 +1,7 @@\n import useConversation from '../../zustand/useConversation';\r\n \r\n const getAvatar = (conversation) => {\r\n-  if (conversation.profilePic) {\r\n-    return conversation.profilePic;\r\n-  }\r\n-\r\n   return conversation.gender === \"male\"\r\n     ? `https://robohash.org/${Math.floor(Math.random() * 10000)}?set=set1&bgset=bg2`\r\n     : `https://robohash.org/${Math.floor(Math.random() * 10000)}?set=set2&bgset=bg2`;\r\n };\r\n@@ -23,14 +19,13 @@\n           ${isSender ? 'justify-end text-red-600' : 'justify-start text-gray-400'}\r\n         `}\r\n         onClick={() => setSelectedConversation(conversation)}\r\n       >\r\n-        {/* Avatar Section */}\r\n-        <div className=\"avatar online\">\r\n-          <div className=\"w-12 h-12 rounded-full bg-gray-500\">\r\n-            <img src={avatar} alt={`${conversation.fullName}'s avatar`} className=\"w-full h-full object-cover\" />\r\n-          </div>\r\n-        </div>\r\n+        {/* Avatar as Background Image */}\r\n+        <div \r\n+          className=\"w-12 h-12 rounded-full bg-gray-500 bg-cover bg-center\" \r\n+          style={{ backgroundImage: `url(${avatar})` }} \r\n+        />\r\n \r\n         {/* User Info Section */}\r\n         <div className=\"flex flex-col flex-1\">\r\n           <div className=\"flex gap-3 justify-between\">\r\n"
                },
                {
                    "date": 1738845806908,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,8 @@\n \r\n const Conversation = ({ conversation, lastIdx, emoji, isSender }) => {  \r\n   const { selectedConversation, setSelectedConversation } = useConversation();\r\n   const isSelected = selectedConversation?._id === conversation._id;\r\n-  const avatar = getAvatar(conversation);\r\n \r\n   return (\r\n     <>\r\n       <div\r\n@@ -19,19 +18,15 @@\n           ${isSender ? 'justify-end text-red-600' : 'justify-start text-gray-400'}\r\n         `}\r\n         onClick={() => setSelectedConversation(conversation)}\r\n       >\r\n-        {/* Avatar as Background Image */}\r\n-        <div \r\n-          className=\"w-12 h-12 rounded-full bg-gray-500 bg-cover bg-center\" \r\n-          style={{ backgroundImage: `url(${avatar})` }} \r\n-        />\r\n-\r\n         {/* User Info Section */}\r\n         <div className=\"flex flex-col flex-1\">\r\n           <div className=\"flex gap-3 justify-between\">\r\n             <p className=\"font-bold text-gray-200\">{conversation.fullName}</p>\r\n             <span className=\"text-xl\">{emoji}</span>\r\n+            <img src={getAvatar(conversation)} alt=\"User Avatar\" className=\"w-12 h-12 rounded-full\" />\r\n+\r\n           </div>\r\n         </div>\r\n       </div>\r\n \r\n"
                },
                {
                    "date": 1738845953343,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n     ? `https://robohash.org/${Math.floor(Math.random() * 10000)}?set=set1&bgset=bg2`\r\n     : `https://robohash.org/${Math.floor(Math.random() * 10000)}?set=set2&bgset=bg2`;\r\n };\r\n \r\n-const Conversation = ({ conversation, lastIdx, emoji, isSender }) => {  \r\n+const Conversation = ({ conversation, lastIdx, isSender }) => {  \r\n   const { selectedConversation, setSelectedConversation } = useConversation();\r\n   const isSelected = selectedConversation?._id === conversation._id;\r\n \r\n   return (\r\n@@ -22,9 +22,9 @@\n         {/* User Info Section */}\r\n         <div className=\"flex flex-col flex-1\">\r\n           <div className=\"flex gap-3 justify-between\">\r\n             <p className=\"font-bold text-gray-200\">{conversation.fullName}</p>\r\n-            <span className=\"text-xl\">{emoji}</span>\r\n+            <span className=\"text-xl\"></span>\r\n             <img src={getAvatar(conversation)} alt=\"User Avatar\" className=\"w-12 h-12 rounded-full\" />\r\n \r\n           </div>\r\n         </div>\r\n"
                },
                {
                    "date": 1738846260823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,8 +8,9 @@\n \r\n const Conversation = ({ conversation, lastIdx, isSender }) => {  \r\n   const { selectedConversation, setSelectedConversation } = useConversation();\r\n   const isSelected = selectedConversation?._id === conversation._id;\r\n+  const avatar = getAvatar(conversation);\r\n \r\n   return (\r\n     <>\r\n       <div\r\n@@ -18,15 +19,19 @@\n           ${isSender ? 'justify-end text-red-600' : 'justify-start text-gray-400'}\r\n         `}\r\n         onClick={() => setSelectedConversation(conversation)}\r\n       >\r\n+        {/* Avatar as Background Image */}\r\n+        <div \r\n+          className=\"w-12 h-12 rounded-full bg-cover bg-center\"\r\n+          style={{ backgroundImage: `url(${avatar})` }} \r\n+        />\r\n+\r\n         {/* User Info Section */}\r\n         <div className=\"flex flex-col flex-1\">\r\n           <div className=\"flex gap-3 justify-between\">\r\n             <p className=\"font-bold text-gray-200\">{conversation.fullName}</p>\r\n             <span className=\"text-xl\"></span>\r\n-            <img src={getAvatar(conversation)} alt=\"User Avatar\" className=\"w-12 h-12 rounded-full\" />\r\n-\r\n           </div>\r\n         </div>\r\n       </div>\r\n \r\n"
                },
                {
                    "date": 1738873903499,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,14 +1,14 @@\n import useConversation from '../../zustand/useConversation';\r\n \r\n const getAvatar = (conversation) => {\r\n   return conversation.gender === \"male\"\r\n-    ? `https://robohash.org/${Math.floor(Math.random() * 10000)}?set=set1&bgset=bg2`\r\n-    : `https://robohash.org/${Math.floor(Math.random() * 10000)}?set=set2&bgset=bg2`;\r\n+    ? `https://robohash.org/${conversation._id}?set=set1&bgset=bg2`\r\n+    : `https://robohash.org/${conversation._id}?set=set2&bgset=bg2`;\r\n };\r\n \r\n-const Conversation = ({ conversation, lastIdx, isSender }) => {  \r\n-  const { selectedConversation, setSelectedConversation } = useConversation();\r\n+const Conversation = ({ conversation, lastIdx, isSender, onClick }) => {  \r\n+  const { selectedConversation } = useConversation();\r\n   const isSelected = selectedConversation?._id === conversation._id;\r\n   const avatar = getAvatar(conversation);\r\n \r\n   return (\r\n@@ -17,17 +17,17 @@\n         className={`flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\r\n           ${isSelected ? 'bg-red-700' : ''} \r\n           ${isSender ? 'justify-end text-red-600' : 'justify-start text-gray-400'}\r\n         `}\r\n-        onClick={() => setSelectedConversation(conversation)}\r\n+        onClick={onClick} // ✅ Pass onClick handler\r\n       >\r\n-        {/* Avatar as Background Image */}\r\n+        {/* Avatar */}\r\n         <div \r\n           className=\"w-12 h-12 rounded-full bg-cover bg-center\"\r\n           style={{ backgroundImage: `url(${avatar})` }} \r\n         />\r\n \r\n-        {/* User Info Section */}\r\n+        {/* User Info */}\r\n         <div className=\"flex flex-col flex-1\">\r\n           <div className=\"flex gap-3 justify-between\">\r\n             <p className=\"font-bold text-gray-200\">{conversation.fullName}</p>\r\n             <span className=\"text-xl\"></span>\r\n"
                }
            ],
            "date": 1738568574269,
            "name": "Commit-0",
            "content": "const Conversation = (conversation,lastIdx,emoji) => {\r\n    return (\r\n      <>\r\n        <div className=\"flex gap-2 items-center hover:bg-gray-800 rounded p-2 py-1 cursor-pointer\">\r\n          {/* Avatar Section */}\r\n          <div className=\"avatar online\">\r\n            <div className=\"w-12 rounded-full\">\r\n              <img\r\n                src={conversation.profilePic}\r\n                alt=\"user avatar\"\r\n              />\r\n            </div>\r\n          </div>\r\n  \r\n          {/* User Info Section */}\r\n          <div className=\"flex flex-col flex-1\">\r\n            <div className=\"flex gap-3 justify-between\">\r\n              <p className=\"font-bold text-gray-200\">{conversation.fullName}</p>\r\n              <span className=\"text-xl\">{emoji}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n  \r\n        {/* Divider */}\r\n        {!lastIdx && <div className='divider my-0 py-0 h-2'/>}\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export default Conversation;\r\n  "
        }
    ]
}