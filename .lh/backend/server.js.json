{
    "sourceFile": "backend/server.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1738014660829,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1738015080970,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,5 +2,10 @@\n \r\n \r\n const app = express();\r\n \r\n+app.get('/', (req, res) => {\r\n+    //root route http://localhost:5000/\r\n+    res.send('Hello World');\r\n+});\r\n+\r\n app.listen(5000,() => console.log('Server running on port 5000'));\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738015512190,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,5 +9,5 @@\n     //root route http://localhost:5000/\r\n     res.send('Hello World');\r\n });\r\n \r\n-app.listen(5000,() => co\n\\ No newline at end of file\n+app.listen(5000,() => console.log('Server running on port 5000'));\n\\ No newline at end of file\n"
                },
                {
                    "date": 1738837912351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,68 +1,35 @@\n-import express from 'express';\r\n-import dotenv from 'dotenv';\r\n-import cookieParser from 'cookie-parser';\r\n-import mongoose from 'mongoose';\r\n-import session from 'express-session'; // Import express-session\r\n+import path from \"path\";\r\n+import express from \"express\";\r\n+import dotenv from \"dotenv\";\r\n+import cookieParser from \"cookie-parser\";\r\n \r\n-import authRoutes from './routes/auth.routes.js';\r\n-import messagesRoutes from './routes/message.routes.js';\r\n-import userRoutes from './routes/user.routes.js';\r\n+import authRoutes from \"./routes/auth.routes.js\";\r\n+import messageRoutes from \"./routes/message.routes.js\";\r\n+import userRoutes from \"./routes/user.routes.js\";\r\n \r\n-const app = express();\r\n+import connectToMongoDB from \"./db/connectToMongoDB.js\";\r\n+import { app, server } from \"./socket/socket.js\";\r\n \r\n-// Load environment variables from .env file\r\n dotenv.config();\r\n \r\n+const __dirname = path.resolve();\r\n+// PORT should be assigned after calling dotenv.config() because we need to access the env variables. Didn't realize while recording the video. Sorry for the confusion.\r\n const PORT = process.env.PORT || 5000;\r\n-const MONGO_URI = process.env.MONGO_URI; // Ensure your .env file has this variable set\r\n \r\n-// Function to connect to MongoDB\r\n-const connectToMongoDB = async () => {\r\n-    try {\r\n-        if (!MONGO_URI) {\r\n-            console.error(\"MongoDB URI is missing. Check your .env file.\");\r\n-            process.exit(1);\r\n-        }\r\n-        await mongoose.connect(MONGO_URI);\r\n-        console.log('Connected to MongoDB');\r\n-    } catch (error) {\r\n-        console.error('Error connecting to MongoDB:', error.message);\r\n-        process.exit(1); // Exit process with failure\r\n-    }\r\n-};\r\n+app.use(express.json()); // to parse the incoming requests with JSON payloads (from req.body)\r\n+app.use(cookieParser());\r\n \r\n-// Middleware to parse incoming JSON requests and cookies\r\n-app.use(express.json()); // Make sure to parse JSON requests\r\n-app.use(cookieParser()); // Make sure to parse cookies\r\n+app.use(\"/api/auth\", authRoutes);\r\n+app.use(\"/api/messages\", messageRoutes);\r\n+app.use(\"/api/users\", userRoutes);\r\n \r\n-// Add session middleware\r\n-app.use(session({\r\n-    secret: process.env.SESSION_SECRET || 'your_secret_key', // Use a strong secret key\r\n-    resave: false,\r\n-    saveUninitialized: true,\r\n-    cookie: { secure: false } // Set to true if using HTTPS\r\n-}));\r\n+app.use(express.static(path.join(__dirname, \"/frontend/dist\")));\r\n \r\n-// Routes\r\n-app.use('/api/auth', authRoutes);\r\n-app.use('/api/messages', messagesRoutes);\r\n-app.use('/api/users', userRoutes);\r\n-\r\n-// Start the server and connect to MongoDB\r\n-app.listen(PORT, async () => {\r\n-    await connectToMongoDB();\r\n-    console.log(`Server running on port ${PORT}`);\r\n+app.get(\"*\", (req, res) => {\r\n+\tres.sendFile(path.join(__dirname, \"frontend\", \"dist\", \"index.html\"));\r\n });\r\n \r\n-// Gracefully shut down the server when receiving termination signals\r\n-process.on('SIGINT', async () => {\r\n-    console.log('Received SIGINT. Closing the server...');\r\n-    await mongoose.disconnect();\r\n-    process.exit(0); // Exit successfully\r\n-});\r\n-\r\n-process.on('SIGTERM', async () => {\r\n-    console.log('Received SIGTERM. Closing the server...');\r\n-    await mongoose.disconnect();\r\n-    process.exit(0); // Exit successfully\r\n+server.listen(PORT, () => {\r\n+\tconnectToMongoDB();\r\n+\tconsole.log(`Server Running on port ${PORT}`);\r\n });\n\\ No newline at end of file\n"
                }
            ],
            "date": 1738014660829,
            "name": "Commit-0",
            "content": "const express = require('express');\r\n\r\n\r\nconst app = express();\r\n\r\napp.listen(5000,() => console.log('Server running on port 5000'));"
        }
    ]
}